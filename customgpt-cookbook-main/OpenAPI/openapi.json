{
    "openapi": "3.0.2",
    "info": {
        "title": "CustomGPT",
        "description": "API Documentation for CustomGPT.",
        "contact": {
            "name": "CustomGPT",
            "url": "https:\/\/app.customgpt.ai",
            "email": "hello@customgpt.ai"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https:\/\/app.customgpt.ai",
            "description": "API Version 1"
        }
    ],
    "paths": {
        "\/api\/v1\/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "List all projects.",
                "description": "Returns a list of your projects. The projects are returned sorted by creation date, with the most recent projects appearing first. It is a paginated API and you can use the page parameter to fetch the next page of projects. The default page size is 10.\n\nHere is an example to list projects: using [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/List_all_projects_for_an_account_with_pagination.ipynb) and using our python [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_List_all_projects_using_pagination.ipynb).",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to return",
                        "required": false,
                        "schema": {
                            "default": 1,
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "description": "The duration of the projects to list.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 90
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order of the projects to list. Defaults to desc.",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "default": "desc",
                            "type": "string"
                        }
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "The width of the embed code. Defaults to 100%.",
                        "required": false,
                        "schema": {
                            "default": "100%",
                            "type": "string",
                            "example": "50rem"
                        }
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "The height of the embed code. Defaults to 100%.",
                        "required": false,
                        "schema": {
                            "default": "auto",
                            "type": "string",
                            "example": "50rem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of projects that belong to the user.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "enum": [
                                                "error",
                                                "success"
                                            ],
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "description": "The current page number",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/Project"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "description": "The first page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "from": {
                                                    "description": "The first item number of the current page",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "description": "The last page number",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page_url": {
                                                    "description": "The last page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "next_page_url": {
                                                    "description": "The next page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "path": {
                                                    "description": "The current page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "per_page": {
                                                    "description": "The number of items per page",
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "prev_page_url": {
                                                    "description": "The previous page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "to": {
                                                    "description": "The last item number of the current page",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "description": "The total number of items",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project.",
                "description": "Create a new project by importing data either from a sitemap or an uploaded file. This endpoint enables you to initiate the creation of a new project by supplying the necessary project data that will be used as the context. You can choose to import the project structure and content from a sitemap url or upload a specific file format that contains the context can be any text, audio or video format. The system will process the provided data and generate a new project based on the imported or uploaded information.\nHere is an example to create a bot using a sitemap: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Create_Bot_By_Sitemap.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Create_Bot_By_Sitemap.ipynb).",
                "requestBody": {
                    "description": "Create a new project from a sitemap or a file",
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "project_name": {
                                        "description": "Project name",
                                        "type": "string",
                                        "example": "My project"
                                    },
                                    "sitemap_path": {
                                        "description": "The sitemap path",
                                        "type": "string",
                                        "example": "https:\/\/example.com\/sitemap.xml"
                                    },
                                    "file_data_retension": {
                                        "description": "File data retension",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "file": {
                                        "description": "The submitted file.",
                                        "format": "binary",
                                        "type": "string",
                                        "example": "file.pdf"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#\/components\/responses\/ProjectCreatedResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/CreateProjectErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Show a certain project.",
                "description": "Retrieve details of a project based on its unique project ID. This endpoint allows you to fetch specific information about a project.",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique project identifier.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "The width of the embed code. Defaults to 100%.",
                        "required": false,
                        "schema": {
                            "default": "100%",
                            "type": "string",
                            "example": "50rem"
                        }
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "The height of the embed code. Defaults to 100%.",
                        "required": false,
                        "schema": {
                            "default": "auto",
                            "type": "string",
                            "example": "50rem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/ListProjectResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update a certain project.",
                "description": "Update a project with specific details based on its unique projectId. This endpoint allows you to modify and revise the information associated with a particular project\nHere is an example to a update a specific object: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Update%20a%20project%20name.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Update_a_project_name.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique identifier of a project.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update a project",
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "project_name": {
                                        "description": "Project name",
                                        "type": "string",
                                        "example": "My project"
                                    },
                                    "is_shared": {
                                        "description": "Whether the project is shared or not",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "sitemap_path": {
                                        "description": "Sitemap path",
                                        "type": "string",
                                        "example": "https:\/\/example.com\/sitemap.xml"
                                    },
                                    "file_data_retension": {
                                        "description": "File data retension",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "file": {
                                        "description": "File",
                                        "format": "binary",
                                        "type": "string",
                                        "example": "file.pdf"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/UpdateProjectResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a certain project.",
                "description": "Delete a project by its unique project ID. This endpoint allows you to remove an existing project from the system based on its ID.\nHere is an example to delete a project: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Delete_a_project.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Delete_a_project.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique identifier of a project.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/DeleteProjectResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/stats": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get the stats for a certain project.",
                "description": "Retrieve statistical data for a project using its unique projectId. This endpoint provides extensive statistics about the project's performance, activity, or other relevant metrics.\nHere is an example to a specific object stats: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Get_Project_Stats.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Get_Project_Stats.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique identifier of a project.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/ProjectStatsResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/pages": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "List all pages that belong to a project.",
                "description": "Retrieve a list of all pages associated with a project. This endpoint allows you to fetch project details and a collection of pages that belong to a specific project. Each page object includes information such as the page ID, URL, hash of the URL, project ID, crawl status, index status, file details (if applicable), creation and update timestamps, and other relevant attributes.\nHere is an example to list all pages belonging to project: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/List_all_pages_of_a_project.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_List_all_pages_belonging_to_a_project.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique project identifier.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to return",
                        "required": false,
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "description": "The duration of the projects to list. Defaults to 90 days.",
                        "required": false,
                        "schema": {
                            "default": 90,
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order of the projects to list. Defaults to desc.",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "default": "desc",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of pages successfully retrieved.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "enum": [
                                                "error",
                                                "success"
                                            ],
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "project": {
                                                    "$ref": "#\/components\/schemas\/Project"
                                                },
                                                "pages": {
                                                    "type": "object",
                                                    "properties": {
                                                        "current_page": {
                                                            "description": "The current page number",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#\/components\/schemas\/Page"
                                                            }
                                                        },
                                                        "first_page_url": {
                                                            "description": "The first page url",
                                                            "type": "string",
                                                            "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                        },
                                                        "from": {
                                                            "description": "The first item number of the current page",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "description": "The last page number",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page_url": {
                                                            "description": "The last page url",
                                                            "type": "string",
                                                            "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                        },
                                                        "next_page_url": {
                                                            "description": "The next page url",
                                                            "type": "string",
                                                            "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                        },
                                                        "path": {
                                                            "description": "The current page url",
                                                            "type": "string",
                                                            "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                        },
                                                        "per_page": {
                                                            "description": "The number of items per page",
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "prev_page_url": {
                                                            "description": "The previous page url",
                                                            "type": "string",
                                                            "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                        },
                                                        "to": {
                                                            "description": "The last item number of the current page",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "total": {
                                                            "description": "The total number of items",
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/pages\/{pageId}": {
            "delete": {
                "tags": [
                    "Pages"
                ],
                "summary": "Delete a certain page that belongs to a certain project.",
                "description": "Delete a specific page within a project based on its unique projectId and pageId. This endpoint allows you to remove a particular page from the project, permanently deleting its associated context.\nHere is an example to delete a certain page: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Delete_a_page_from_the_project.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Delete_a_project_page.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique project identifier.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "The page id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/DeleteProjectResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/pages\/{pageId}\/reindex": {
            "post": {
                "tags": [
                    "Pages"
                ],
                "summary": "Reindex a certain page that belongs to a certain project.",
                "description": "Reindex a specific page within a project based on its unique projectId and pageId. This endpoint allows you to refresh a particular page from the project. Our system will crawl and index page content newly.",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique project identifier.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "The page id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Page reindex process start successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "enum": [
                                                "error",
                                                "success"
                                            ],
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "updated": {
                                                    "description": "Whether the page start reindex process successfully or not",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/PageReindexErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/settings": {
            "get": {
                "tags": [
                    "Project Settings"
                ],
                "summary": "Get project settings.",
                "description": "Retrieve the project settings for a specific project. This endpoint allows you to fetch the configuration and settings associated with the project.\nHere is an example to get a project settings: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Get_Settings_for_a_particular_project.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Get_settings_for_a_particular_project.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique project identifier.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/ListProjectSettingsResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Project Settings"
                ],
                "summary": "Update project settings.",
                "description": "Update the project settings for a specific project. This endpoint allows you to update the configuration and settings associated with the project.\nHere is an example to get a project settings: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Update_settings_for_a_particular_project.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Update_project_settings.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique project identifier.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update project settings",
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "chat_bot_avatar": {
                                        "description": "Chatbot avatar",
                                        "format": "binary",
                                        "type": "string",
                                        "example": "avatar.png"
                                    },
                                    "chat_bot_bg": {
                                        "description": "Chatbot background",
                                        "format": "binary",
                                        "type": "string",
                                        "example": "bg.png"
                                    },
                                    "default_prompt": {
                                        "description": "Default prompt",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "How can I help you?"
                                    },
                                    "example_questions": {
                                        "description": "Example questions",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "How can I help you?"
                                        }
                                    },
                                    "response_source": {
                                        "description": "Response source",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "https:\/\/example.com"
                                    },
                                    "chatbot_msg_lang": {
                                        "description": "Chatbot message language",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "en"
                                    },
                                    "chatbot_color": {
                                        "description": "Chatbot color in hex format",
                                        "type": "string",
                                        "maxLength": 9,
                                        "example": "#000000"
                                    },
                                    "persona_instructions": {
                                        "description": "Role instructions for persona or null if persona must be delete",
                                        "type": "string",
                                        "nullable": true,
                                        "example": "You are a custom chatbot assistant called CustomGPT, a friendly lawyer who answers questions based on the given context."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/UpdateProjectSettingsResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/UpdateProjectSettingsErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/plugins": {
            "get": {
                "tags": [
                    "Project Plugins"
                ],
                "summary": "Show a certain project plugin.",
                "description": "Retrieve the plugin details associated with a project. This endpoint provides information about the project plugin.",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique project id.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/ListProjectPluginResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectPluginNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Project Plugins"
                ],
                "summary": "Create a plugin.",
                "description": "Create a new plugin for a specific project identified by its unique projectId. This endpoint enables you to create a custom plugin for the project. Which allows you to share the custom chatbot as openai plugin to be shared globally.",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The id of a project in which plugin will be stored.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create a project plugin",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "model_name": {
                                        "description": "Model Name",
                                        "type": "string",
                                        "example": "IndoorPlants"
                                    },
                                    "human_name": {
                                        "description": "Name For Human",
                                        "type": "string",
                                        "example": "The Indoor Plants Channel"
                                    },
                                    "keywords": {
                                        "description": "Keywords For Model",
                                        "type": "string",
                                        "example": "Indoor plants, Gardening, Trusted information."
                                    },
                                    "description": {
                                        "description": "Description For Human",
                                        "type": "string",
                                        "example": "Trusted information about indoor plants and gardening."
                                    },
                                    "is_active": {
                                        "description": "Whether the project plugin is active or not",
                                        "default": false,
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#\/components\/responses\/CreateProjectPluginResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Project Plugins"
                ],
                "summary": "Update a plugin.",
                "description": "Update the plugin configuration for a specific project identified by its unique projectId. This endpoint allows you to update the associated attributes of the plugin.",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The id of a project in which plugin will be stored.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update a project plugin",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "model_name": {
                                        "description": "Model Name",
                                        "type": "string",
                                        "example": "IndoorPlants"
                                    },
                                    "human_name": {
                                        "description": "Name For Human",
                                        "type": "string",
                                        "example": "The Indoor Plants Channel"
                                    },
                                    "keywords": {
                                        "description": "Keywords For Model",
                                        "type": "string",
                                        "example": "Indoor plants, Gardening, Trusted information."
                                    },
                                    "description": {
                                        "description": "Description For Human",
                                        "type": "string",
                                        "example": "Trusted information about indoor plants and gardening."
                                    },
                                    "is_active": {
                                        "description": "Whether the project plugin is active or not",
                                        "default": false,
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/UpdateProjectPluginResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectPluginNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/conversations": {
            "get": {
                "tags": [
                    "Conversations"
                ],
                "summary": "List all conversations for a project.",
                "description": "Retrieve all conversations associated with a project based on its unique projectId. This endpoint allows you to fetch a collection of conversations related to a specific project.",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The ID of the project to get the conversations for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to return",
                        "required": false,
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order to sort the results by",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "default": "desc",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "userFilter",
                        "in": "query",
                        "description": "Filter the results by the user that created the conversation",
                        "required": false,
                        "schema": {
                            "enum": [
                                "all",
                                "anonymous",
                                "team_member"
                            ],
                            "default": "all",
                            "type": "string",
                            "example": "all"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of conversations for a project",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "enum": [
                                                "error",
                                                "success"
                                            ],
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "description": "The current page number",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/Conversation"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "description": "The first page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "from": {
                                                    "description": "The first item number of the current page",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "description": "The last page number",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page_url": {
                                                    "description": "The last page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "next_page_url": {
                                                    "description": "The next page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "path": {
                                                    "description": "The current page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "per_page": {
                                                    "description": "The number of items per page",
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "prev_page_url": {
                                                    "description": "The previous page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "to": {
                                                    "description": "The last item number of the current page",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "description": "The total number of items",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Conversations"
                ],
                "summary": "Create a new conversation.",
                "description": "Create a new conversation for a project identified by its unique projectId. This endpoint allows you to initiate a new conversation within a specific project. A conversation serves as a platform for users to exchange messages regarding project-related matters. By providing the projectId, you can establish a conversation within the context of the project allowing you to seamlessly communicate with it.\nHere is an example to create a conversation: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Create_a_new_conversation_and_send_a_message_to_the_conversation.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Create_a_new_conversation_and_send_a_message_to_the_conversation.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique project identifier.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create a new conversation",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "Conversation name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "My conversation"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#\/components\/responses\/CreateConversationResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/conversations\/{sessionId}": {
            "put": {
                "tags": [
                    "Conversations"
                ],
                "summary": "Update a conversation.",
                "description": "Update a conversation within a project identified by its unique projectId and sessionId. This endpoint allows you to modify and update the properties of a specific conversation. By providing the projectId and sessionId, you can target the desired conversation and make changes to its attributes.\nHere is an example to update a conversation: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Update_Delete_a_conversation.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Update_Delete_a_conversation.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique project identifier.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "The unique session identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update a conversation",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "The new name of the conversation",
                                        "type": "string",
                                        "example": "My new conversation name"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update conversation information",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "enum": [
                                                "error",
                                                "success"
                                            ],
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#\/components\/schemas\/Conversation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Conversations"
                ],
                "summary": "Delete a conversation.",
                "description": "Delete a conversation within a project identified by its unique projectId and sessionId. This endpoint allows you to remove a specific conversation from the project, permanently deleting all associated messages. By providing the projectId and sessionId, you can target the conversation to be deleted, ensuring the removal of all conversation-related data.\nHere is an example to delete a conversation: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Update_Delete_a_conversation.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Update_Delete_a_conversation.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique project identifier.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "The unique session identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/DeleteProjectResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/conversations\/{sessionId}\/messages": {
            "get": {
                "tags": [
                    "Conversations"
                ],
                "summary": "Retrieve messages that have been sent in a conversation.",
                "description": "Retrieve all messages sent within a conversation of a project identified by its unique projectId and sessionId. This endpoint allows you to retrieve a collection of messages exchanged in a specific conversation. Messages contain the content, timestamps, and other relevant information shared during the course of the conversation. By providing the projectId and sessionId, you can access all the messages associated with that particular conversation within the project context.\nHere is an example to retrieve messages of a conversation: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Retrieve_messages_for_a_conversation.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Retrieve_Messages_of_conversation.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The ID of the project to get the messages for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "The session ID of the converstaions to get the messages for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to return",
                        "required": false,
                        "schema": {
                            "default": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order to sort the results by",
                        "required": false,
                        "schema": {
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "default": "desc",
                            "type": "string",
                            "example": "desc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/ConversationMessageListResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Conversations"
                ],
                "summary": "Send a message to a conversation.",
                "description": "Send a message to a conversation within a project identified by its unique projectId and sessionId. This endpoint enables you to send a new message to a specific conversation, facilitating seamless communication and collaboration within the project. By providing the projectId and sessionId, you can target the desired conversation and contribute to the ongoing discussion. This API endpoint supports real-time streaming, allowing for instant message delivery and dynamic updates which enables efficient and interactive communication between the user and chatbot.\nHere is an example to send a message to a conversation: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Create_a_new_conversation_and_send_a_message_to_the_conversation.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Create_a_new_conversation_and_send_a_message_to_the_conversation.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The ID of the project to get the messages for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "The session ID of the converstaions to get the messages for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    },
                    {
                        "name": "stream",
                        "in": "query",
                        "description": "Whether to stream the response or not, if stream the responses will be sent as data-only server-sent events as they become available, with the stream terminated by a `status: \"finish\"` message. [Example Python code](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Create_a_new_conversation_and_send_a_message_to_the_conversation.ipynb).",
                        "required": false,
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "The language to use for the prompt",
                        "required": false,
                        "schema": {
                            "default": "en",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Send a message to a conversation.",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "prompt": {
                                        "description": "Prompt to send to OpenAI",
                                        "type": "string",
                                        "example": "Write me hello world program in C"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/SendConversationResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/citations\/{citationId}": {
            "get": {
                "tags": [
                    "Citations"
                ],
                "summary": "Get the Open Graph data for a citation.",
                "description": "Retrieve the Open Graph data for a citation based on its unique identifier. This endpoint allows you to fetch the Open Graph metadata associated with a specific citation.\nHere is an example to get citation detail: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Get_citation_details.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Get_Citation_Details.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique identifier of the project.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "citationId",
                        "in": "path",
                        "description": "The unique identifier of the citation.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get the Open Graph data for a citation",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "enum": [
                                                "error",
                                                "success"
                                            ],
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#\/components\/schemas\/OpenGraphCache"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/sources": {
            "get": {
                "tags": [
                    "Sources"
                ],
                "summary": "List a certain project's sources.",
                "description": "Retrieve a list of all sources associated with a given project. This endpoint provides a collection of sources that are linked to a specific project. Sources serve as references or contexts for the project.",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique identifier of a project.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#\/components\/responses\/ListProjectsResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sources"
                ],
                "summary": "Create a new project source.",
                "description": "Create a new data source for a given project, allowing you to add additional context by specifying a sitemap URL or uploading a file. This endpoint enables you to enrich the project's information by incorporating relevant data sources.\nHere is an example to add a new source to project: [API](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/Add_a_sitemap_to_an_existing_project.ipynb) [SDK](https:\/\/github.com\/Poll-The-People\/customgpt-cookbook\/blob\/main\/examples\/SDK_Add_a_Sitemap_to_project.ipynb).",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique identifier of a project.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create a new project source from a sitemap or a file",
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sitemap_path": {
                                        "description": "The sitemap path",
                                        "type": "string",
                                        "example": "https:\/\/example.com\/sitemap.xml"
                                    },
                                    "file_data_retension": {
                                        "description": "File data retension",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "file": {
                                        "description": "The submitted file.",
                                        "format": "binary",
                                        "type": "string",
                                        "example": "file.pdf"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#\/components\/responses\/CreateProjectSourceResponse"
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/FlaskServiceErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/projects\/{projectId}\/sources\/{sourceId}": {
            "delete": {
                "tags": [
                    "Sources"
                ],
                "summary": "Delete a project source.",
                "description": "Delete a source for a given project.",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique identifier of a project.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sourceId",
                        "in": "path",
                        "description": "The unique identifier of a source.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project source deleted successfully",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "enum": [
                                                "error",
                                                "success"
                                            ],
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deleted": {
                                                    "description": "Whether the project source was deleted successfully or not",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ProjectNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/preview\/{id}": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Preview file from citation.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "$ref": "#\/components\/responses\/BadArgumentErrorResponse"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/PageNotFoundErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        },
        "\/api\/v1\/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show the user's profile.",
                "description": "Retrieve the profile information of the current user. This endpoint allows you to fetch the details and attributes associated with the user's profile, providing valuable information about the user's account and preferences.",
                "responses": {
                    "200": {
                        "description": "Retrieve user account info",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "enum": [
                                                "error",
                                                "success"
                                            ],
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#\/components\/schemas\/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Update the user's profile.",
                "description": "Update the profile of the current user. This endpoint allows the user to modify and update their profile information and preferences within the application or system.",
                "requestBody": {
                    "description": "Update user account info",
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "profile_photo": {
                                        "description": "User profile photo",
                                        "format": "binary",
                                        "type": "string",
                                        "example": "avatar.png"
                                    },
                                    "name": {
                                        "description": "User name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update user account info",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "description": "The status of the response",
                                            "enum": [
                                                "error",
                                                "success"
                                            ],
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#\/components\/schemas\/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/ApiTokenValidationErrorResponse"
                    },
                    "500": {
                        "$ref": "#\/components\/responses\/InternalServerErrorResponse"
                    }
                },
                "security": [
                    {
                        "BearerToken": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ProjectSettings": {
                "type": "object",
                "properties": {
                    "chatbot_avatar": {
                        "description": "The chatbot avatar",
                        "type": "string",
                        "example": "https:\/\/example.com\/chatbot_avatar.png"
                    },
                    "chatbot_background": {
                        "description": "The chatbot background",
                        "type": "string",
                        "example": "https:\/\/example.com\/chatbot_background.png"
                    },
                    "default_prompt": {
                        "description": "The default prompt",
                        "type": "string",
                        "example": "How can I help you?"
                    },
                    "example_questions": {
                        "description": "The example questions",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "How do I get started?"
                        ]
                    },
                    "response_source": {
                        "description": "The response source",
                        "enum": [
                            "Default",
                            "My Content",
                            "My Content + ChatGPT"
                        ],
                        "type": "string",
                        "example": "https:\/\/example.com\/response_source.json"
                    },
                    "chatbot_msg_lang": {
                        "description": "The chatbot message language",
                        "type": "string",
                        "example": "en"
                    },
                    "chatbot_color": {
                        "description": "The chatbot color in hex format",
                        "type": "string",
                        "example": "#000000"
                    },
                    "persona_instructions": {
                        "description": "Role instructions for persona or null if persona must be delete",
                        "type": "string",
                        "nullable": true,
                        "example": "You are a custom chatbot assistant called CustomGPT, a friendly lawyer who answers questions based on the given context."
                    }
                }
            },
            "OpenGraphCache": {
                "type": "object",
                "properties": {
                    "page_url": {
                        "description": "The URL of the page",
                        "type": "string",
                        "example": "https:\/\/www.example.com"
                    },
                    "title": {
                        "description": "The title of the page",
                        "type": "string",
                        "example": "Example Domain"
                    },
                    "description": {
                        "description": "The description of the page",
                        "type": "string",
                        "example": "This domain is for use in illustrative examples in documents. You may use this domain in literature without prior coordination or asking for permission."
                    },
                    "image": {
                        "description": "The image of the page",
                        "type": "string",
                        "example": "https:\/\/www.example.com\/image.png"
                    },
                    "image_width": {
                        "description": "The width of the image of the page",
                        "type": "integer",
                        "example": 1200
                    },
                    "image_height": {
                        "description": "The height of the image of the page",
                        "type": "integer",
                        "example": 630
                    },
                    "url": {
                        "description": "The URL of the page",
                        "type": "string",
                        "example": "https:\/\/www.example.com"
                    },
                    "favicon": {
                        "description": "The favicon of the page",
                        "type": "string",
                        "example": "https:\/\/www.example.com\/favicon.ico"
                    },
                    "site_name": {
                        "description": "The site name of the page",
                        "type": "string",
                        "example": "Example Domain"
                    }
                }
            },
            "Page": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Page ID",
                        "type": "integer",
                        "example": 1
                    },
                    "page_url": {
                        "description": "URL of the page or file",
                        "type": "string",
                        "example": "https:\/\/example.com"
                    },
                    "page_url_hash": {
                        "description": "Hash of the URL of the page or file",
                        "format": "md5",
                        "type": "string",
                        "example": "d41d8cd98f00b204e9800998ecf8427e"
                    },
                    "project_id": {
                        "description": "Project ID",
                        "type": "integer",
                        "example": 1
                    },
                    "s3_path": {
                        "description": "This is the path where the page is stored in S3.\\nNote: This is omitted in the response if the page is not a file",
                        "type": "string",
                        "nullable": true,
                        "example": "project-1\/page-1\/file.pdf"
                    },
                    "crawl_status": {
                        "description": "Crawl status of the page",
                        "enum": [
                            "ok",
                            "queued",
                            "failed",
                            "n\/a",
                            "limited"
                        ],
                        "default": "queued",
                        "type": "string",
                        "example": "queued"
                    },
                    "index_status": {
                        "description": "Index status of the page",
                        "enum": [
                            "ok",
                            "queued",
                            "failed",
                            "n\/a",
                            "limited"
                        ],
                        "default": "queued",
                        "type": "string",
                        "example": "queued"
                    },
                    "is_file": {
                        "description": "Whether the page is a file or not",
                        "default": false,
                        "type": "boolean",
                        "example": true
                    },
                    "is_file_kept": {
                        "description": "Whether the file is kept after processing or not.\\nNote: This is omitted in the response if the page is not a file",
                        "default": true,
                        "type": "boolean",
                        "example": true
                    },
                    "filename": {
                        "description": "Filename of the page.\\nNote: This is omitted in the response if the page is not a file",
                        "format": "binary",
                        "type": "string",
                        "nullable": true,
                        "example": "file.pdf"
                    },
                    "filesize": {
                        "description": "Filesize of the page.\\nNote: This is omitted in the response if the page is not a file",
                        "type": "integer",
                        "nullable": true,
                        "example": 100
                    },
                    "created_at": {
                        "description": "Date and time when the page was created",
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    },
                    "updated_at": {
                        "description": "Date and time when the page was updated",
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "description": "Date and time when the page was deleted",
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    }
                }
            },
            "Project": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Project ID",
                        "type": "integer",
                        "example": 1
                    },
                    "project_name": {
                        "description": "Project name",
                        "type": "string",
                        "example": "My Project"
                    },
                    "sitemap_path": {
                        "description": "Project sitemap",
                        "type": "string",
                        "example": "https:\/\/www.example.com\/sitemap.xml"
                    },
                    "is_chat_active": {
                        "description": "Whether the chat bot is active or not",
                        "default": false,
                        "type": "boolean",
                        "example": true
                    },
                    "user_id": {
                        "description": "User ID of the project owner",
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "description": "Date and time when the project was created",
                        "default": "2023-05-08 13:06:55",
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    },
                    "updated_at": {
                        "description": "Date and time when the project was last updated",
                        "default": "2023-05-08 13:06:55",
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    },
                    "deleted_at": {
                        "description": "Date and time when the project was deleted",
                        "format": "date-time",
                        "type": "string",
                        "nullable": true,
                        "example": "2021-01-01 00:00:00"
                    },
                    "type": {
                        "description": "Project type",
                        "enum": [
                            "SITEMAP",
                            "URL"
                        ],
                        "default": "SITEMAP",
                        "type": "string",
                        "example": "SITEMAP"
                    },
                    "is_shared": {
                        "description": "Whether the project is shared or not",
                        "default": false,
                        "type": "boolean",
                        "example": true
                    },
                    "shareable_slug": {
                        "description": "Shareable slug that can be used to share the project",
                        "format": "md5",
                        "type": "string",
                        "nullable": true,
                        "example": "1234567890abcdef1234567890abcdef"
                    },
                    "shareable_link": {
                        "description": "Shareable link that can be used to share the project",
                        "format": "url",
                        "type": "string",
                        "nullable": true
                    },
                    "embed_code": {
                        "description": "Embed code that can be used to embed the project",
                        "format": "html",
                        "type": "string",
                        "nullable": true
                    },
                    "live_chat_code": {
                        "description": "Live chat code that can be used to embed the live chat",
                        "format": "html",
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "When was this user created?",
                        "format": "date-time",
                        "type": "string",
                        "example": "2023-04-30 16:43:53"
                    },
                    "email": {
                        "description": "User email",
                        "format": "email",
                        "type": "string",
                        "example": "user@domain.com"
                    },
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "User name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "profile_photo_url": {
                        "description": "User profile photo URL",
                        "format": "url",
                        "type": "string",
                        "example": "https:\/\/app.customgpt.ai\/user\/1\/profile_photo_url"
                    },
                    "updated_at": {
                        "description": "When was this user updated?",
                        "format": "date-time",
                        "type": "string",
                        "example": "2023-04-30 16:43:53"
                    }
                }
            },
            "ProjectPlugin": {
                "type": "object",
                "properties": {
                    "model_name": {
                        "description": "Model Name",
                        "type": "string",
                        "example": "IndoorPlants"
                    },
                    "human_name": {
                        "description": "Name For Human",
                        "type": "string",
                        "example": "The Indoor Plants Channel"
                    },
                    "keywords": {
                        "description": "Keywords For Model",
                        "type": "string",
                        "example": "Indoor plants, Gardening, Trusted information."
                    },
                    "description": {
                        "description": "Description For Human",
                        "type": "string",
                        "example": "Trusted information about indoor plants and gardening."
                    },
                    "logo": {
                        "description": "Project plugin logo",
                        "type": "string",
                        "example": "https:\/\/app.customgpt.ai\/logo.svg"
                    },
                    "is_active": {
                        "description": "Whether the project plugin is active or not",
                        "default": false,
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "ProjectSource": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The project source ID",
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "description": "The project source creation date",
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    },
                    "updated_at": {
                        "description": "The project source update date",
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    },
                    "type": {
                        "description": "The project source type",
                        "enum": [
                            "sitemap",
                            "upload"
                        ],
                        "type": "string",
                        "example": "sitemap"
                    },
                    "settings": {
                        "description": "The project source settings",
                        "type": "object",
                        "properties": {
                            "data_refresh": {
                                "description": "Whether the project source data should be refreshed",
                                "default": false,
                                "type": "boolean",
                                "example": true
                            },
                            "executive_js": {
                                "description": "Whether the project source should execute JavaScript",
                                "default": true,
                                "type": "boolean",
                                "example": true
                            },
                            "data_refresh_frequency": {
                                "description": "The project source data refresh frequency",
                                "default": "never",
                                "type": "string",
                                "example": "never"
                            },
                            "sitemap_path": {
                                "description": "The project source sitemap path",
                                "type": "string",
                                "example": "https:\/\/example.com\/sitemap.xml"
                            }
                        }
                    },
                    "pages": {
                        "description": "The project source pages",
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/Page"
                        },
                        "nullable": true
                    }
                }
            },
            "PromptHistory": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the prompt history.",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "The unique identifier of the user.",
                        "type": "integer",
                        "example": 1
                    },
                    "user_query": {
                        "description": "The user prompt query.",
                        "type": "string",
                        "example": "What is the meaning of life?"
                    },
                    "openai_response": {
                        "description": "The OpenAI response to the user prompt query.",
                        "type": "string",
                        "example": "The meaning of life is to be happy."
                    },
                    "created_at": {
                        "description": "The date and time the prompt history was created.",
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    },
                    "updated_at": {
                        "description": "The date and time the prompt history was last updated.",
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    },
                    "conversation_id": {
                        "description": "The unique identifier of the conversation.",
                        "type": "integer",
                        "example": 1
                    },
                    "citations": {
                        "description": "The citations for the prompt history.",
                        "default": [],
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1,
                            2,
                            3
                        ]
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "user_ip": {
                                "description": "The IP address of the user.",
                                "type": "string",
                                "example": "127.0.0.1"
                            },
                            "user_agent": {
                                "description": "The user agent of the user.",
                                "type": "string",
                                "example": "Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko)"
                            }
                        },
                        "example": {
                            "user_ip": "127.0.0.1",
                            "user_agent": "Mozilla\/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit\/537.36 (KHTML, like Gecko)"
                        }
                    }
                }
            },
            "Conversation": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "When was this conversation created?",
                        "format": "date-time",
                        "type": "string",
                        "example": "2023-04-30 16:43:53"
                    },
                    "updated_at": {
                        "description": "When was this conversation updated?",
                        "format": "date-time",
                        "type": "string",
                        "example": "2023-04-30 16:43:53"
                    },
                    "deleted_at": {
                        "description": "When was this conversation deleted?",
                        "format": "date-time",
                        "type": "string",
                        "example": "2023-04-30 16:43:53"
                    },
                    "id": {
                        "description": "Conversation ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Conversation name",
                        "type": "string",
                        "example": "Conversation 1"
                    },
                    "project_id": {
                        "description": "Project ID for this conversation",
                        "type": "string",
                        "example": 1
                    },
                    "created_by": {
                        "description": "User ID for the user who created this conversation",
                        "type": "string",
                        "example": 1
                    },
                    "session_id": {
                        "description": "Session ID for this conversation",
                        "format": "uuid",
                        "type": "string",
                        "example": "f1b9aaf0-5e4e-11eb-ae93-0242ac130002"
                    }
                }
            }
        },
        "responses": {
            "FlaskServiceErrorResponse": {
                "description": "Service unavailable",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "error"
                                },
                                "url": {
                                    "description": "The URL of the request",
                                    "type": "string",
                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/projects\/1"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "description": "The error status code",
                                            "enum": [
                                                400,
                                                401,
                                                403,
                                                404,
                                                500,
                                                503
                                            ],
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "description": "The error message",
                                            "enum": [
                                                "Sitemap URL is empty",
                                                "Our system could not validate your sitemap",
                                                "Our system could not detect any pages in your sitemap"
                                            ],
                                            "type": "string",
                                            "example": "Sitemap URL is empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "PageReindexErrorResponse": {
                "description": "Page cannot be reindexed",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "error"
                                },
                                "url": {
                                    "description": "The URL of the request",
                                    "type": "string",
                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/projects\/1"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "description": "The error status code",
                                            "enum": [
                                                400,
                                                401,
                                                403,
                                                404,
                                                500,
                                                503
                                            ],
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "description": "The error message",
                                            "enum": [
                                                "Page with id {pageId} cannot be reindexed"
                                            ],
                                            "type": "string",
                                            "example": "Page with id 1 cannot be reindexed"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CreateProjectSourceResponse": {
                "description": "Successfully created a new project source.",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#\/components\/schemas\/ProjectSource"
                                }
                            }
                        }
                    }
                }
            },
            "DeleteProjectResponse": {
                "description": "Project deleted successfully",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "deleted": {
                                            "description": "Whether the project was deleted successfully or not",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ListProjectsResponse": {
                "description": "Successfully retrieved list of sources that belong to a project.",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "sitemaps": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/ProjectSource"
                                            }
                                        },
                                        "uploads": {
                                            "$ref": "#\/components\/schemas\/ProjectSource"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ProjectStatsResponse": {
                "description": "Project stats",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "pages_found": {
                                            "description": "Number of pages found for the project",
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "pages_crawled": {
                                            "description": "Number of pages crawled for the project",
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "pages_indexed": {
                                            "description": "Number of pages indexed for the project",
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "crawl_credits_used": {
                                            "description": "Number of crawl credits used for the project",
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "query_credits_used": {
                                            "description": "Number of query credits used for the project",
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "index_credits_used": {
                                            "description": "Number of index credits used for the project",
                                            "type": "integer",
                                            "example": 100
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ProjectPluginNotFoundErrorResponse": {
                "description": "Project plugin not found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "error"
                                },
                                "url": {
                                    "description": "The URL of the request",
                                    "type": "string",
                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/projects\/1"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "description": "The error status code",
                                            "enum": [
                                                400,
                                                401,
                                                403,
                                                404,
                                                500,
                                                503
                                            ],
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "description": "The error message",
                                            "enum": [
                                                "Project plugin id is required",
                                                "Project plugin with id {pluginId} not found",
                                                "Plugin for project with id {projectId} not found"
                                            ],
                                            "type": "string",
                                            "example": "Project plugin with id 1 not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ApiTokenValidationErrorResponse": {
                "description": "API Token is either missing or invalid",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "error"
                                },
                                "url": {
                                    "description": "The URL of the request",
                                    "type": "string",
                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/projects\/1"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "description": "The error status code",
                                            "enum": [
                                                400,
                                                401,
                                                403,
                                                404,
                                                500,
                                                503
                                            ],
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API Token is either missing or invalid"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "BadArgumentErrorResponse": {
                "description": "Bad Argument",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "error"
                                },
                                "url": {
                                    "description": "The URL of the request",
                                    "type": "string",
                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/projects\/1"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "description": "The error status code",
                                            "enum": [
                                                400,
                                                401,
                                                403,
                                                404,
                                                500,
                                                503
                                            ],
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "description": "The error message",
                                            "type": "string",
                                            "example": "Project id must be integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ListProjectSettingsResponse": {
                "description": "Project settings that belong to a certain project",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#\/components\/schemas\/ProjectSettings"
                                }
                            }
                        }
                    }
                }
            },
            "SendConversationResponse": {
                "description": "Send a message to a conversation",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#\/components\/schemas\/PromptHistory"
                                }
                            }
                        }
                    }
                }
            },
            "ProjectNotFoundErrorResponse": {
                "description": "Project not found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "error"
                                },
                                "url": {
                                    "description": "The URL of the request",
                                    "type": "string",
                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/projects\/1"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "description": "The error status code",
                                            "enum": [
                                                400,
                                                401,
                                                403,
                                                404,
                                                500,
                                                503
                                            ],
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "description": "The error message",
                                            "enum": [
                                                "Project id is required",
                                                "Project with id {projectId} not found"
                                            ],
                                            "type": "string",
                                            "example": "Project with id 1 not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CreateConversationResponse": {
                "description": "Create a new conversation",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#\/components\/schemas\/Conversation"
                                }
                            }
                        }
                    }
                }
            },
            "CreateProjectErrorResponse": {
                "description": "Project creation failed",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "error"
                                },
                                "url": {
                                    "description": "The URL of the request",
                                    "type": "string",
                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/projects\/1"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "description": "The error status code",
                                            "enum": [
                                                400,
                                                401,
                                                403,
                                                404,
                                                500,
                                                503
                                            ],
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "description": "The error message",
                                            "enum": [
                                                "Project name can't be empty",
                                                "Sitemap path can't be empty",
                                                "You have reached your monthly project limit"
                                            ],
                                            "type": "string",
                                            "example": "Project name can't be empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ProjectCreatedResponse": {
                "description": "Project has been created",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#\/components\/schemas\/Project"
                                }
                            }
                        }
                    }
                }
            },
            "ListProjectResponse": {
                "description": "Retrieve certain project that belongs to the user",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#\/components\/schemas\/Project"
                                }
                            }
                        }
                    }
                }
            },
            "ListProjectPluginResponse": {
                "description": "Project plugin that belong to a certain project",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#\/components\/schemas\/ProjectPlugin"
                                }
                            }
                        }
                    }
                }
            },
            "UpdateProjectResponse": {
                "description": "Project has been updated",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#\/components\/schemas\/Project"
                                }
                            }
                        }
                    }
                }
            },
            "UpdateProjectSettingsResponse": {
                "description": "Project settings have been updated",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "updated": {
                                            "description": "Whether the project was updated successfully or not",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "UpdateProjectPluginResponse": {
                "description": "Project plugin have been updated",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#\/components\/schemas\/ProjectPlugin"
                                }
                            }
                        }
                    }
                }
            },
            "InternalServerErrorResponse": {
                "description": "Internal Server Error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "error"
                                },
                                "url": {
                                    "description": "The URL of the request",
                                    "type": "string",
                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/projects\/1"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "description": "The error status code",
                                            "enum": [
                                                400,
                                                401,
                                                403,
                                                404,
                                                500,
                                                503
                                            ],
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ConversationMessageListResponse": {
                "description": "List all messages in a conversation",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "conversation": {
                                            "$ref": "#\/components\/schemas\/Conversation"
                                        },
                                        "messages": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "description": "The current page number",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/PromptHistory"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "description": "The first page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "from": {
                                                    "description": "The first item number of the current page",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "description": "The last page number",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page_url": {
                                                    "description": "The last page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "next_page_url": {
                                                    "description": "The next page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "path": {
                                                    "description": "The current page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "per_page": {
                                                    "description": "The number of items per page",
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "prev_page_url": {
                                                    "description": "The previous page url",
                                                    "type": "string",
                                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/users?page=1"
                                                },
                                                "to": {
                                                    "description": "The last item number of the current page",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "description": "The total number of items",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CreateProjectPluginResponse": {
                "description": "Project plugin have been created",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "success"
                                },
                                "data": {
                                    "$ref": "#\/components\/schemas\/ProjectPlugin"
                                }
                            }
                        }
                    }
                }
            },
            "UpdateProjectSettingsErrorResponse": {
                "description": "Update project settings failed",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "error"
                                },
                                "url": {
                                    "description": "The URL of the request",
                                    "type": "string",
                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/projects\/1"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "description": "The error status code",
                                            "enum": [
                                                400,
                                                401,
                                                403,
                                                404,
                                                500,
                                                503
                                            ],
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "description": "The error message",
                                            "enum": [
                                                "Please upload a valid image file for avatar",
                                                "Please upload a valid image file for background",
                                                "Language Proficiency is required."
                                            ],
                                            "type": "string",
                                            "example": "Please upload a valid image file for avatar"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "PageNotFoundErrorResponse": {
                "description": "Page not found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "description": "The status of the response",
                                    "enum": [
                                        "error",
                                        "success"
                                    ],
                                    "type": "string",
                                    "example": "error"
                                },
                                "url": {
                                    "description": "The URL of the request",
                                    "type": "string",
                                    "example": "https:\/\/app.customgpt.ai\/api\/v1\/projects\/1"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "description": "The error status code",
                                            "enum": [
                                                400,
                                                401,
                                                403,
                                                404,
                                                500,
                                                503
                                            ],
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "description": "The error message",
                                            "enum": [
                                                "Page id is required",
                                                "Page with id {pageId} not found"
                                            ],
                                            "type": "string",
                                            "example": "Page with id 1 not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerToken": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Projects",
            "description": "API Endpoints for Projects"
        },
        {
            "name": "Pages",
            "description": "API Endpoints for Pages"
        },
        {
            "name": "Users",
            "description": "API Endpoints for Users"
        },
        {
            "name": "Project Settings",
            "description": "API Endpoints for Project Settings"
        },
        {
            "name": "Project Plugins",
            "description": "API Endpoints for Project Plugins"
        },
        {
            "name": "Conversations",
            "description": "API Endpoints for Conversations"
        },
        {
            "name": "Citations",
            "description": "API Endpoints for Citations"
        }
    ],
    "x-readme": {
        "explorer-enabled": true,
        "proxy-enabled": true,
        "samples-enabled": true
    }
}