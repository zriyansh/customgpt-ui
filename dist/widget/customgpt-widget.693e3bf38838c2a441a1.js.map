{"version":3,"file":"customgpt-widget.693e3bf38838c2a441a1.js","mappings":"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","sources":["webpack://CustomGPTWidget/webpack/universalModuleDefinition","webpack://CustomGPTWidget/webpack/runtime/chunk loaded","webpack://CustomGPTWidget/./src/lib/utils.ts","webpack://CustomGPTWidget/./src/lib/api/client.ts","webpack://CustomGPTWidget/./src/store/config.ts","webpack://CustomGPTWidget/./src/store/agents.ts","webpack://CustomGPTWidget/./src/store/conversations.ts","webpack://CustomGPTWidget/./src/lib/streaming/handler.ts","webpack://CustomGPTWidget/./src/store/messages.ts","webpack://CustomGPTWidget/./src/store/ui.ts","webpack://CustomGPTWidget/./src/components/ui/button.tsx","webpack://CustomGPTWidget/./src/components/chat/CitationList.tsx","webpack://CustomGPTWidget/./src/components/chat/Message.tsx","webpack://CustomGPTWidget/./src/components/chat/ChatInput.tsx","webpack://CustomGPTWidget/./src/components/chat/TypingIndicator.tsx","webpack://CustomGPTWidget/./src/components/chat/AgentSelector.tsx","webpack://CustomGPTWidget/./src/components/chat/ChatContainer.tsx","webpack://CustomGPTWidget/./src/components/chat/ConversationSidebar.tsx","webpack://CustomGPTWidget/./src/components/chat/ChatLayout.tsx","webpack://CustomGPTWidget/./src/widget/index.tsx","webpack://CustomGPTWidget/webpack/bootstrap","webpack://CustomGPTWidget/webpack/runtime/compat get default export","webpack://CustomGPTWidget/webpack/runtime/define property getters","webpack://CustomGPTWidget/webpack/runtime/global","webpack://CustomGPTWidget/webpack/runtime/hasOwnProperty shorthand","webpack://CustomGPTWidget/webpack/runtime/make namespace object","webpack://CustomGPTWidget/webpack/runtime/jsonp chunk loading","webpack://CustomGPTWidget/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CustomGPTWidget\"] = factory();\n\telse\n\t\troot[\"CustomGPTWidget\"] = factory();\n})(this, () => {\nreturn ","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\nimport DOMPurify from 'dompurify';\n\n/**\n * Utility function for combining Tailwind CSS classes\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Generate a unique ID\n */\nexport function generateId(): string {\n  return Math.random().toString(36).substring(2) + Date.now().toString(36);\n}\n\n/**\n * Format file size in bytes to human readable format\n */\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n/**\n * Get file icon based on file type\n */\nexport function getFileIcon(fileType: string): string {\n  const type = fileType.toLowerCase();\n  \n  if (type.includes('pdf')) return '📄';\n  if (type.includes('image')) return '🖼️';\n  if (type.includes('video')) return '🎥';\n  if (type.includes('audio')) return '🎵';\n  if (type.includes('text') || type.includes('txt')) return '📝';\n  if (type.includes('word') || type.includes('doc')) return '📄';\n  if (type.includes('excel') || type.includes('sheet')) return '📊';\n  if (type.includes('powerpoint') || type.includes('presentation')) return '📈';\n  if (type.includes('zip') || type.includes('rar')) return '🗜️';\n  if (type.includes('json')) return '📋';\n  if (type.includes('csv')) return '📊';\n  \n  return '📎';\n}\n\n/**\n * Validate file type against allowed types\n */\nexport function isFileTypeAllowed(fileType: string, allowedTypes: readonly string[]): boolean {\n  return allowedTypes.some(type => fileType.toLowerCase().includes(type.toLowerCase()));\n}\n\n/**\n * Format timestamp to human readable format\n */\nexport function formatTimestamp(timestamp: string): string {\n  const date = new Date(timestamp);\n  const now = new Date();\n  const diffInMs = now.getTime() - date.getTime();\n  const diffInMinutes = Math.floor(diffInMs / (1000 * 60));\n  const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));\n  const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));\n  \n  if (diffInMinutes < 1) return 'Just now';\n  if (diffInMinutes < 60) return `${diffInMinutes}m ago`;\n  if (diffInHours < 24) return `${diffInHours}h ago`;\n  if (diffInDays < 7) return `${diffInDays}d ago`;\n  \n  return date.toLocaleDateString();\n}\n\n/**\n * Copy text to clipboard\n */\nexport async function copyToClipboard(text: string): Promise<boolean> {\n  try {\n    await navigator.clipboard.writeText(text);\n    return true;\n  } catch (error) {\n    console.error('Failed to copy to clipboard:', error);\n    return false;\n  }\n}\n\n/**\n * Sanitize HTML content\n */\nexport function sanitizeHtml(html: string): string {\n  if (typeof window === 'undefined') {\n    return html; // Skip sanitization on server side\n  }\n  \n  return DOMPurify.sanitize(html, {\n    ALLOWED_TAGS: ['p', 'br', 'strong', 'em', 'code', 'pre', 'a', 'ul', 'ol', 'li', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n    ALLOWED_ATTR: ['href', 'target', 'rel', 'class'],\n  });\n}\n\n/**\n * Debounce function\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout;\n  \n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(null, args), wait);\n  };\n}\n\n/**\n * Throttle function\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean;\n  \n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func.apply(null, args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n}\n\n/**\n * Truncate text to specified length\n */\nexport function truncateText(text: string, maxLength: number): string {\n  if (text.length <= maxLength) return text;\n  return text.substring(0, maxLength).trim() + '...';\n}\n\n/**\n * Validate CustomGPT API key format\n * Format: digits|alphanumeric_string with various allowed characters\n */\nexport function isValidApiKey(apiKey: string): boolean {\n  if (!apiKey || typeof apiKey !== 'string') {\n    return false;\n  }\n  \n  // Trim whitespace\n  apiKey = apiKey.trim();\n  \n  // CustomGPT API key format: starts with digits followed by | then alphanumeric string\n  // Example: 7727|QxxxpM5Dxxxxz9CI3lGwyOBNoRav7oMdgFMxxxxefded9d9x\n  // Must have at least 3 digits, pipe, and at least 20 characters after pipe\n  return /^\\d{3,}\\|[a-zA-Z0-9]{20,}$/.test(apiKey);\n}\n\n/**\n * Parse streaming response chunk\n */\nexport function parseStreamChunk(chunk: string): any | null {\n  try {\n    if (chunk.startsWith('data: ')) {\n      const data = chunk.slice(6);\n      if (data === '[DONE]') return { type: 'done' };\n      return JSON.parse(data);\n    }\n    return null;\n  } catch (error) {\n    console.error('Failed to parse stream chunk:', error);\n    return null;\n  }\n}\n\n/**\n * Extract inline citations from text\n */\nexport function extractInlineCitations(text: string): { text: string; citations: number[] } {\n  const citationRegex = /\\[(\\d+)\\]/g;\n  const citations: number[] = [];\n  let match;\n  \n  while ((match = citationRegex.exec(text)) !== null) {\n    citations.push(parseInt(match[1]));\n  }\n  \n  return { text, citations };\n}\n\n/**\n * Create a delay promise\n */\nexport function delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Retry a function with exponential backoff\n */\nexport async function retryWithBackoff<T>(\n  fn: () => Promise<T>,\n  maxAttempts: number = 3,\n  baseDelay: number = 1000\n): Promise<T> {\n  let lastError: Error;\n  \n  for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n    try {\n      return await fn();\n    } catch (error) {\n      lastError = error as Error;\n      \n      if (attempt === maxAttempts) {\n        throw lastError;\n      }\n      \n      const delayTime = baseDelay * Math.pow(2, attempt - 1);\n      await delay(delayTime);\n    }\n  }\n  \n  throw lastError!;\n}\n\n/**\n * Check if device is mobile\n */\nexport function isMobile(): boolean {\n  if (typeof window === 'undefined') return false;\n  return window.innerWidth < 768;\n}\n\n/**\n * Check if device is tablet\n */\nexport function isTablet(): boolean {\n  if (typeof window === 'undefined') return false;\n  return window.innerWidth >= 768 && window.innerWidth < 1024;\n}\n\n/**\n * Check if device is desktop\n */\nexport function isDesktop(): boolean {\n  if (typeof window === 'undefined') return false;\n  return window.innerWidth >= 1024;\n}\n\n/**\n * Get responsive container class\n */\nexport function getResponsiveContainer(): string {\n  if (isMobile()) return 'w-full h-full';\n  if (isTablet()) return 'w-full max-w-2xl mx-auto';\n  return 'w-full max-w-4xl mx-auto';\n}\n\n/**\n * Format conversation name from first message\n */\nexport function generateConversationName(firstMessage: string): string {\n  const words = firstMessage.trim().split(/\\s+/);\n  const title = words.slice(0, 6).join(' ');\n  return title.length > 50 ? title.substring(0, 50).trim() + '...' : title;\n}\n\n/**\n * Validate URL format\n */\nexport function isValidUrl(url: string): boolean {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Get file extension from filename\n */\nexport function getFileExtension(filename: string): string {\n  return filename.split('.').pop()?.toLowerCase() || '';\n}\n\n/**\n * Check if file is an image\n */\nexport function isImageFile(fileType: string): boolean {\n  return fileType.startsWith('image/');\n}\n\n/**\n * Check if file is a document\n */\nexport function isDocumentFile(fileType: string): boolean {\n  const documentTypes = [\n    'application/pdf',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'text/plain',\n    'text/csv',\n    'application/json',\n    'application/xml',\n  ];\n  return documentTypes.includes(fileType);\n}\n\n/**\n * Create download link for file\n */\nexport function downloadFile(content: string, filename: string, mimeType: string = 'text/plain'): void {\n  const blob = new Blob([content], { type: mimeType });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  URL.revokeObjectURL(url);\n}\n\n/**\n * Escape HTML entities\n */\nexport function escapeHtml(unsafe: string): string {\n  return unsafe\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n\n/**\n * Constants for file uploads and API\n */\nexport const CONSTANTS = {\n  MAX_FILE_SIZE: 10 * 1024 * 1024, // 10MB\n  ACCEPTED_FILE_TYPES: [\n    'application/pdf',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'text/plain',\n    'text/csv',\n    'application/json',\n    'application/xml',\n    'image/jpeg',\n    'image/png',\n    'image/gif',\n    'image/webp',\n  ],\n  MAX_MESSAGE_LENGTH: 4000,\n  API_TIMEOUT: 30000,\n  STREAM_TIMEOUT: 60000,\n  RETRY_ATTEMPTS: 3,\n  RETRY_DELAY: 1000,\n} as const;","import type {\n  Agent,\n  AgentSettings,\n  Conversation,\n  ChatMessage,\n  Citation,\n  APIResponse,\n  AgentsResponse,\n  ConversationsResponse,\n  MessagesResponse,\n  MessageResponse,\n  CitationResponse,\n  StreamChunk,\n} from '@/types';\nimport { parseStreamChunk, retryWithBackoff, delay } from '@/lib/utils';\n\nexport interface CustomGPTClientConfig {\n  apiKey: string;\n  baseURL?: string;\n  timeout?: number;\n  retryAttempts?: number;\n  retryDelay?: number;\n}\n\nexport interface RequestOptions extends RequestInit {\n  timeout?: number;\n  retryAttempts?: number;\n  params?: Record<string, string | number | boolean>;\n}\n\nexport interface StreamOptions {\n  onChunk?: (chunk: StreamChunk) => void;\n  onComplete?: () => void;\n  onError?: (error: Error) => void;\n  timeout?: number;\n}\n\nexport class CustomGPTAPIClient {\n  private baseURL: string;\n  private apiKey: string;\n  private timeout: number;\n  private retryAttempts: number;\n  private retryDelay: number;\n  private abortControllers: Map<string, AbortController> = new Map();\n\n  constructor(config: CustomGPTClientConfig) {\n    this.apiKey = config.apiKey;\n    this.baseURL = config.baseURL || 'https://app.customgpt.ai/api/v1';\n    this.timeout = config.timeout || 30000;\n    this.retryAttempts = config.retryAttempts || 3;\n    this.retryDelay = config.retryDelay || 1000;\n  }\n\n  /**\n   * Generic request method with retry logic and error handling\n   */\n  private async request<T>(\n    endpoint: string,\n    options: RequestOptions = {}\n  ): Promise<T> {\n    const {\n      timeout = this.timeout,\n      retryAttempts = this.retryAttempts,\n      params,\n      ...fetchOptions\n    } = options;\n\n    // Build URL with query parameters\n    const url = new URL(`${this.baseURL}${endpoint}`);\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          url.searchParams.append(key, value.toString());\n        }\n      });\n    }\n\n    const headers: Record<string, string> = {\n      'Authorization': `Bearer ${this.apiKey}`,\n      ...(fetchOptions.headers as Record<string, string>),\n    };\n\n    // Only set Content-Type if body is not FormData\n    if (!(fetchOptions.body instanceof FormData)) {\n      headers['Content-Type'] = 'application/json';\n    }\n\n    const requestOptions: RequestInit = {\n      ...fetchOptions,\n      headers,\n    };\n\n    return retryWithBackoff(\n      async () => {\n        const abortController = new AbortController();\n        const requestId = this.generateRequestId();\n        this.abortControllers.set(requestId, abortController);\n\n        // Set timeout\n        const timeoutId = setTimeout(() => {\n          abortController.abort();\n        }, timeout);\n\n        try {\n          const response = await fetch(url.toString(), {\n            ...requestOptions,\n            signal: abortController.signal,\n          });\n\n          clearTimeout(timeoutId);\n          this.abortControllers.delete(requestId);\n\n          if (!response.ok) {\n            const errorText = await response.text();\n            let errorMessage: string;\n            \n            try {\n              const errorData = JSON.parse(errorText);\n              errorMessage = errorData.message || errorData.error || 'Unknown error';\n            } catch {\n              errorMessage = errorText || `HTTP ${response.status}`;\n            }\n\n            throw new APIError(response.status, errorMessage);\n          }\n\n          return await response.json();\n        } catch (error) {\n          clearTimeout(timeoutId);\n          this.abortControllers.delete(requestId);\n          \n          if (error instanceof APIError) {\n            throw error;\n          }\n          \n          if (error instanceof Error && error.name === 'AbortError') {\n            throw new APIError(408, 'Request timeout');\n          }\n          \n          throw new APIError(0, error instanceof Error ? error.message : 'Network error');\n        }\n      },\n      retryAttempts,\n      this.retryDelay\n    );\n  }\n\n  /**\n   * Streaming request method for real-time responses\n   */\n  private async streamRequest(\n    endpoint: string,\n    options: RequestOptions = {},\n    streamOptions: StreamOptions = {}\n  ): Promise<void> {\n    const {\n      timeout = 60000, // Longer timeout for streaming\n      params,\n      ...fetchOptions\n    } = options;\n\n    const { onChunk, onComplete, onError } = streamOptions;\n\n    // Build URL with stream parameter\n    const url = new URL(`${this.baseURL}${endpoint}`);\n    url.searchParams.append('stream', 'true');\n    \n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          url.searchParams.append(key, value.toString());\n        }\n      });\n    }\n\n    const abortController = new AbortController();\n    const requestId = this.generateRequestId();\n    this.abortControllers.set(requestId, abortController);\n\n    // Set timeout\n    const timeoutId = setTimeout(() => {\n      abortController.abort();\n    }, timeout);\n\n    try {\n      const response = await fetch(url.toString(), {\n        ...fetchOptions,\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json',\n          'Accept': 'text/event-stream',\n          ...fetchOptions.headers,\n        },\n        signal: abortController.signal,\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new APIError(response.status, errorText);\n      }\n\n      const reader = response.body?.getReader();\n      if (!reader) {\n        throw new APIError(500, 'No response body');\n      }\n\n      const decoder = new TextDecoder();\n      let buffer = '';\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read();\n          \n          if (done) {\n            onComplete?.();\n            break;\n          }\n\n          buffer += decoder.decode(value, { stream: true });\n          const lines = buffer.split('\\n');\n          buffer = lines.pop() || ''; // Keep incomplete line in buffer\n\n          for (const line of lines) {\n            if (line.trim()) {\n              const chunk = parseStreamChunk(line);\n              if (chunk) {\n                if (chunk.type === 'done') {\n                  onComplete?.();\n                  return;\n                } else if (chunk.type === 'error') {\n                  onError?.(new Error(chunk.error || 'Stream error'));\n                  return;\n                } else {\n                  onChunk?.(chunk);\n                }\n              }\n            }\n          }\n        }\n      } finally {\n        reader.releaseLock();\n      }\n    } catch (error) {\n      if (error instanceof APIError) {\n        onError?.(error);\n      } else if (error instanceof Error && error.name === 'AbortError') {\n        onError?.(new APIError(408, 'Request timeout'));\n      } else {\n        onError?.(new APIError(0, error instanceof Error ? error.message : 'Network error'));\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      this.abortControllers.delete(requestId);\n    }\n  }\n\n  /**\n   * Cancel a request by ID\n   */\n  public cancelRequest(requestId: string): void {\n    const controller = this.abortControllers.get(requestId);\n    if (controller) {\n      controller.abort();\n      this.abortControllers.delete(requestId);\n    }\n  }\n\n  /**\n   * Cancel all active requests\n   */\n  public cancelAllRequests(): void {\n    this.abortControllers.forEach(controller => controller.abort());\n    this.abortControllers.clear();\n  }\n\n  private generateRequestId(): string {\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\n  }\n\n  // AGENTS/PROJECTS API METHODS\n\n  /**\n   * Get list of agents\n   */\n  async getAgents(params?: {\n    page?: number;\n    duration?: number;\n    order?: 'asc' | 'desc';\n    orderBy?: 'id' | 'created_at';\n    name?: string;\n  }): Promise<AgentsResponse> {\n    return this.request<AgentsResponse>('/projects', { params });\n  }\n\n  /**\n   * Get single agent by ID\n   */\n  async getAgent(id: number): Promise<APIResponse<Agent>> {\n    return this.request<APIResponse<Agent>>(`/projects/${id}`);\n  }\n\n  /**\n   * Create new agent\n   */\n  async createAgent(data: {\n    project_name: string;\n    sitemap_path?: string;\n    file_data_retension?: boolean;\n    is_ocr_enabled?: boolean;\n    is_anonymized?: boolean;\n    file?: File;\n  }): Promise<APIResponse<Agent>> {\n    const formData = new FormData();\n    Object.entries(data).forEach(([key, value]) => {\n      if (value !== undefined) {\n        formData.append(key, value instanceof File ? value : value.toString());\n      }\n    });\n\n    return this.request<APIResponse<Agent>>('/projects', {\n      method: 'POST',\n      body: formData,\n    });\n  }\n\n  /**\n   * Update agent\n   */\n  async updateAgent(id: number, data: Partial<Agent>): Promise<APIResponse<Agent>> {\n    return this.request<APIResponse<Agent>>(`/projects/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  /**\n   * Delete agent\n   */\n  async deleteAgent(id: number): Promise<APIResponse<{ success: boolean }>> {\n    return this.request<APIResponse<{ success: boolean }>>(`/projects/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  /**\n   * Get agent settings\n   */\n  async getAgentSettings(id: number): Promise<APIResponse<AgentSettings>> {\n    return this.request<APIResponse<AgentSettings>>(`/projects/${id}/settings`);\n  }\n\n  /**\n   * Update agent settings\n   */\n  async updateAgentSettings(id: number, settings: Partial<AgentSettings>): Promise<APIResponse<AgentSettings>> {\n    return this.request<APIResponse<AgentSettings>>(`/projects/${id}/settings`, {\n      method: 'POST',\n      body: JSON.stringify(settings),\n    });\n  }\n\n  // CONVERSATIONS API METHODS\n\n  /**\n   * Get conversations for a project\n   */\n  async getConversations(projectId: number, params?: {\n    page?: number;\n    order?: 'asc' | 'desc';\n    orderBy?: 'id' | 'created_at';\n    name?: string;\n  }): Promise<ConversationsResponse> {\n    return this.request<ConversationsResponse>(`/projects/${projectId}/conversations`, { params });\n  }\n\n  /**\n   * Create new conversation\n   */\n  async createConversation(projectId: number, data: { name: string }): Promise<APIResponse<Conversation>> {\n    return this.request<APIResponse<Conversation>>(`/projects/${projectId}/conversations`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  /**\n   * Update conversation\n   */\n  async updateConversation(\n    projectId: number,\n    sessionId: string,\n    data: { name: string }\n  ): Promise<APIResponse<Conversation>> {\n    return this.request<APIResponse<Conversation>>(`/projects/${projectId}/conversations/${sessionId}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  /**\n   * Delete conversation\n   */\n  async deleteConversation(projectId: number, sessionId: string): Promise<APIResponse<{ success: boolean }>> {\n    return this.request<APIResponse<{ success: boolean }>>(`/projects/${projectId}/conversations/${sessionId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // MESSAGES API METHODS\n\n  /**\n   * Get messages for a conversation\n   */\n  async getMessages(\n    projectId: number,\n    sessionId: string,\n    params?: { page?: number; order?: 'asc' | 'desc' }\n  ): Promise<MessagesResponse> {\n    return this.request<MessagesResponse>(`/projects/${projectId}/conversations/${sessionId}/messages`, { params });\n  }\n\n  /**\n   * Send message (non-streaming)\n   */\n  async sendMessage(\n    projectId: number,\n    sessionId: string,\n    data: {\n      prompt: string;\n      custom_persona?: string;\n      chatbot_model?: string;\n      response_source?: 'default' | 'own_content' | 'openai_content';\n    }\n  ): Promise<MessageResponse> {\n    return this.request<MessageResponse>(`/projects/${projectId}/conversations/${sessionId}/messages`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  /**\n   * Send message with streaming\n   */\n  async sendMessageStream(\n    projectId: number,\n    sessionId: string,\n    data: {\n      prompt: string;\n      custom_persona?: string;\n      chatbot_model?: string;\n      response_source?: 'default' | 'own_content' | 'openai_content';\n    },\n    streamOptions: StreamOptions\n  ): Promise<void> {\n    return this.streamRequest(\n      `/projects/${projectId}/conversations/${sessionId}/messages`,\n      {\n        method: 'POST',\n        body: JSON.stringify(data),\n      },\n      streamOptions\n    );\n  }\n\n  /**\n   * Update message feedback\n   */\n  async updateMessageFeedback(\n    projectId: number,\n    sessionId: string,\n    promptId: number,\n    data: { reaction: 'neutral' | 'disliked' | 'liked' }\n  ): Promise<MessageResponse> {\n    return this.request<MessageResponse>(\n      `/projects/${projectId}/conversations/${sessionId}/messages/${promptId}/feedback`,\n      {\n        method: 'PUT',\n        body: JSON.stringify(data),\n      }\n    );\n  }\n\n  // CITATIONS API METHODS\n\n  /**\n   * Get citation details\n   */\n  async getCitation(projectId: number, citationId: number): Promise<CitationResponse> {\n    return this.request<CitationResponse>(`/projects/${projectId}/citations/${citationId}`);\n  }\n\n  // SOURCES API METHODS\n\n  /**\n   * Get sources for a project\n   */\n  async getSources(projectId: number): Promise<APIResponse<any[]>> {\n    return this.request<APIResponse<any[]>>(`/projects/${projectId}/sources`);\n  }\n\n  /**\n   * Upload file to project\n   */\n  async uploadFile(projectId: number, file: File, options?: {\n    file_data_retension?: boolean;\n    is_ocr_enabled?: boolean;\n    is_anonymized?: boolean;\n  }): Promise<APIResponse<any>> {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    if (options) {\n      Object.entries(options).forEach(([key, value]) => {\n        if (value !== undefined) {\n          formData.append(key, value.toString());\n        }\n      });\n    }\n\n    return this.request<APIResponse<any>>(`/projects/${projectId}/sources`, {\n      method: 'POST',\n      body: formData,\n    });\n  }\n}\n\nexport class APIError extends Error {\n  constructor(\n    public status: number,\n    message: string,\n    public code?: string,\n    public details?: any\n  ) {\n    super(message);\n    this.name = 'APIError';\n  }\n}\n\n// Default client instance (will be initialized with API key)\nlet defaultClient: CustomGPTAPIClient | null = null;\n\nexport function getClient(): CustomGPTAPIClient {\n  if (!defaultClient) {\n    throw new Error('API client not initialized. Call initializeClient() first.');\n  }\n  return defaultClient;\n}\n\nexport function initializeClient(config: CustomGPTClientConfig): CustomGPTAPIClient {\n  defaultClient = new CustomGPTAPIClient(config);\n  return defaultClient;\n}\n\nexport function isClientInitialized(): boolean {\n  return defaultClient !== null;\n}","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport type { ConfigStore } from '@/types';\nimport { initializeClient, isClientInitialized } from '@/lib/api/client';\n\nexport const useConfigStore = create<ConfigStore>()(\n  persist(\n    (set, get) => ({\n      apiKey: null,\n      baseURL: 'https://app.customgpt.ai/api/v1',\n      theme: 'light',\n\n      setApiKey: (key: string) => {\n        set({ apiKey: key });\n        \n        // Initialize API client with new key\n        if (key) {\n          initializeClient({\n            apiKey: key,\n            baseURL: get().baseURL,\n          });\n        }\n      },\n\n      setBaseURL: (url: string) => {\n        set({ baseURL: url });\n        \n        // Re-initialize client if API key exists\n        const { apiKey } = get();\n        if (apiKey) {\n          initializeClient({\n            apiKey,\n            baseURL: url,\n          });\n        }\n      },\n\n      setTheme: (theme: 'light' | 'dark') => {\n        set({ theme });\n        \n        // Update document class for theme\n        if (typeof window !== 'undefined') {\n          document.documentElement.className = theme;\n        }\n      },\n    }),\n    {\n      name: 'customgpt-config',\n      partialize: (state) => ({\n        apiKey: state.apiKey,\n        baseURL: state.baseURL,\n        theme: state.theme,\n      }),\n      onRehydrateStorage: () => (state) => {\n        // Initialize API client on rehydration if API key exists\n        if (state?.apiKey && !isClientInitialized()) {\n          initializeClient({\n            apiKey: state.apiKey,\n            baseURL: state.baseURL,\n          });\n        }\n        \n        // Apply theme on rehydration\n        if (state?.theme && typeof window !== 'undefined') {\n          document.documentElement.className = state.theme;\n        }\n      },\n    }\n  )\n);","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport type { AgentStore, Agent } from '@/types';\nimport { getClient } from '@/lib/api/client';\n\nexport const useAgentStore = create<AgentStore>()(\n  persist(\n    (set, get) => ({\n      agents: [],\n      currentAgent: null,\n      loading: false,\n      error: null,\n\n      fetchAgents: async () => {\n        set({ loading: true, error: null });\n        \n        try {\n          const client = getClient();\n          const response = await client.getAgents();\n          \n          // Handle different response formats\n          let agents: Agent[] = [];\n          if (response && typeof response === 'object') {\n            if (Array.isArray((response as any).data)) {\n              agents = (response as any).data;\n            } else if (Array.isArray(response)) {\n              agents = response as Agent[];\n            } else if ((response as any).data && Array.isArray((response as any).data.data)) {\n              agents = (response as any).data.data;\n            }\n          }\n          \n          console.log('Fetched agents:', agents);\n          \n          set({ \n            agents, \n            loading: false,\n            // Auto-select first agent if none selected\n            currentAgent: get().currentAgent || (agents.length > 0 ? agents[0] : null)\n          });\n        } catch (error) {\n          console.error('Failed to fetch agents:', error);\n          set({ \n            agents: [], // Ensure agents is always an array\n            error: error instanceof Error ? error.message : 'Failed to fetch agents',\n            loading: false \n          });\n        }\n      },\n\n      selectAgent: (agent: Agent) => {\n        set({ currentAgent: agent });\n      },\n\n      setAgents: (agents: Agent[]) => {\n        set({ \n          agents,\n          // Update current agent if it's no longer in the list\n          currentAgent: (() => {\n            const current = get().currentAgent;\n            if (!current) return agents.length > 0 ? agents[0] : null;\n            \n            const stillExists = agents.find(a => a.id === current.id);\n            return stillExists || (agents.length > 0 ? agents[0] : null);\n          })()\n        });\n      },\n    }),\n    {\n      name: 'customgpt-agents',\n      partialize: (state) => ({\n        currentAgent: state.currentAgent,\n      }),\n    }\n  )\n);","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport type { ConversationStore, Conversation } from '@/types';\nimport { getClient } from '@/lib/api/client';\nimport { generateConversationName } from '@/lib/utils';\n\nexport const useConversationStore = create<ConversationStore>()(\n  persist(\n    (set, get) => ({\n      conversations: [],\n      currentConversation: null,\n      loading: false,\n      error: null,\n\n      fetchConversations: async (projectId: number) => {\n        set({ loading: true, error: null });\n        \n        try {\n          const client = getClient();\n          const response = await client.getConversations(projectId);\n          const conversations = response.data || [];\n          \n          set({ \n            conversations, \n            loading: false,\n          });\n        } catch (error) {\n          console.error('Failed to fetch conversations:', error);\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to fetch conversations',\n            loading: false \n          });\n        }\n      },\n\n      createConversation: async (projectId: number, name: string) => {\n        set({ loading: true, error: null });\n        \n        try {\n          const client = getClient();\n          const response = await client.createConversation(projectId, { name });\n          const newConversation = response.data;\n          \n          set(state => ({ \n            conversations: [newConversation, ...state.conversations],\n            currentConversation: newConversation,\n            loading: false,\n          }));\n        } catch (error) {\n          console.error('Failed to create conversation:', error);\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to create conversation',\n            loading: false \n          });\n          throw error;\n        }\n      },\n\n      selectConversation: (conversation: Conversation) => {\n        set({ currentConversation: conversation });\n      },\n\n      deleteConversation: async (conversationId: string) => {\n        const { conversations, currentConversation } = get();\n        const conversation = conversations.find(c => c.id === conversationId);\n        \n        if (!conversation) return;\n\n        set({ loading: true, error: null });\n        \n        try {\n          const client = getClient();\n          await client.deleteConversation(conversation.project_id, conversationId);\n          \n          const updatedConversations = conversations.filter(c => c.id !== conversationId);\n          \n          set({ \n            conversations: updatedConversations,\n            currentConversation: currentConversation?.id === conversationId \n              ? (updatedConversations.length > 0 ? updatedConversations[0] : null)\n              : currentConversation,\n            loading: false,\n          });\n        } catch (error) {\n          console.error('Failed to delete conversation:', error);\n          set({ \n            error: error instanceof Error ? error.message : 'Failed to delete conversation',\n            loading: false \n          });\n          throw error;\n        }\n      },\n\n      // Auto-create conversation if none exists\n      ensureConversation: async (projectId: number, firstMessage?: string) => {\n        const { currentConversation, conversations } = get();\n        \n        // If we have a current conversation for this project, use it\n        if (currentConversation && currentConversation.project_id === projectId) {\n          return currentConversation;\n        }\n        \n        // Look for existing conversations for this project\n        const projectConversations = conversations.filter(c => c.project_id === projectId);\n        if (projectConversations.length > 0) {\n          const conversation = projectConversations[0];\n          set({ currentConversation: conversation });\n          return conversation;\n        }\n        \n        // Create new conversation\n        const name = firstMessage \n          ? generateConversationName(firstMessage)\n          : `Chat ${new Date().toLocaleDateString()}`;\n          \n        await get().createConversation(projectId, name);\n        return get().currentConversation!;\n      },\n    }),\n    {\n      name: 'customgpt-conversations',\n      partialize: (state) => ({\n        currentConversation: state.currentConversation,\n      }),\n    }\n  )\n);","import type { StreamChunk, Citation, StreamCallbacks, StreamHandlerConfig } from '@/types';\nimport { parseStreamChunk } from '@/lib/utils';\n\nexport interface StreamMessage {\n  id: string;\n  content: string;\n  citations: Citation[];\n  isComplete: boolean;\n}\n\nexport class StreamHandler {\n  private config: Required<StreamHandlerConfig>;\n  private abortController: AbortController | null = null;\n  private currentMessage: StreamMessage | null = null;\n\n  constructor(config: StreamHandlerConfig = {}) {\n    this.config = {\n      timeout: config.timeout || 60000,\n      retryAttempts: config.retryAttempts || 3,\n      retryDelay: config.retryDelay || 1000,\n    };\n  }\n\n  /**\n   * Process a streaming response\n   */\n  async processStream(\n    stream: ReadableStream,\n    callbacks: StreamCallbacks\n  ): Promise<StreamMessage> {\n    this.abortController = new AbortController();\n    this.currentMessage = {\n      id: this.generateId(),\n      content: '',\n      citations: [],\n      isComplete: false,\n    };\n\n    const reader = stream.getReader();\n    const decoder = new TextDecoder();\n    let buffer = '';\n\n    // Set timeout\n    const timeoutId = setTimeout(() => {\n      this.cancel();\n      callbacks.onError?.(new Error('Stream timeout'));\n    }, this.config.timeout);\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read();\n\n        if (done) {\n          this.currentMessage.isComplete = true;\n          callbacks.onComplete?.();\n          break;\n        }\n\n        // Decode chunk and add to buffer\n        buffer += decoder.decode(value, { stream: true });\n        \n        // Process complete lines\n        const lines = buffer.split('\\n');\n        buffer = lines.pop() || ''; // Keep incomplete line in buffer\n\n        for (const line of lines) {\n          if (line.trim()) {\n            await this.processLine(line, callbacks);\n          }\n        }\n      }\n    } catch (error) {\n      if (error instanceof Error && error.name === 'AbortError') {\n        callbacks.onError?.(new Error('Stream cancelled'));\n      } else {\n        callbacks.onError?.(error instanceof Error ? error : new Error('Unknown streaming error'));\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      reader.releaseLock();\n      this.abortController = null;\n    }\n\n    return this.currentMessage;\n  }\n\n  /**\n   * Process a single line from the stream\n   */\n  private async processLine(line: string, callbacks: StreamCallbacks): Promise<void> {\n    const chunk = parseStreamChunk(line);\n    \n    if (!chunk || !this.currentMessage) return;\n\n    switch (chunk.type) {\n      case 'content':\n        if (chunk.content) {\n          this.currentMessage.content += chunk.content;\n          callbacks.onChunk?.(chunk.content);\n        }\n        break;\n\n      case 'citation':\n        if (chunk.citations) {\n          this.currentMessage.citations.push(...chunk.citations);\n          chunk.citations.forEach((citation: Citation) => {\n            callbacks.onCitation?.(citation);\n          });\n        }\n        break;\n\n      case 'done':\n        this.currentMessage.isComplete = true;\n        callbacks.onComplete?.();\n        return;\n\n      case 'error':\n        callbacks.onError?.(new Error(chunk.error || 'Stream error'));\n        return;\n\n      default:\n        // Handle unknown chunk types gracefully\n        console.warn('Unknown stream chunk type:', chunk.type);\n    }\n  }\n\n  /**\n   * Cancel the current stream\n   */\n  cancel(): void {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n  }\n\n  /**\n   * Get current message state\n   */\n  getCurrentMessage(): StreamMessage | null {\n    return this.currentMessage;\n  }\n\n  /**\n   * Check if streaming is active\n   */\n  isStreaming(): boolean {\n    return this.abortController !== null && this.currentMessage !== null && !this.currentMessage.isComplete;\n  }\n\n  private generateId(): string {\n    return Math.random().toString(36).substring(2) + Date.now().toString(36);\n  }\n}\n\n/**\n * Utility class for managing multiple concurrent streams\n */\nexport class StreamManager {\n  private streams: Map<string, StreamHandler> = new Map();\n  private maxConcurrentStreams: number;\n\n  constructor(maxConcurrentStreams: number = 3) {\n    this.maxConcurrentStreams = maxConcurrentStreams;\n  }\n\n  /**\n   * Start a new stream\n   */\n  async startStream(\n    streamId: string,\n    stream: ReadableStream,\n    callbacks: StreamCallbacks,\n    config?: StreamHandlerConfig\n  ): Promise<StreamMessage> {\n    // Check if we're at the concurrent limit\n    if (this.streams.size >= this.maxConcurrentStreams) {\n      throw new Error(`Maximum concurrent streams (${this.maxConcurrentStreams}) reached`);\n    }\n\n    // Cancel existing stream with same ID if it exists\n    if (this.streams.has(streamId)) {\n      this.cancelStream(streamId);\n    }\n\n    const handler = new StreamHandler(config);\n    this.streams.set(streamId, handler);\n\n    try {\n      const result = await handler.processStream(stream, {\n        ...callbacks,\n        onComplete: () => {\n          this.streams.delete(streamId);\n          callbacks.onComplete?.();\n        },\n        onError: (error) => {\n          this.streams.delete(streamId);\n          callbacks.onError?.(error);\n        },\n      });\n\n      return result;\n    } catch (error) {\n      this.streams.delete(streamId);\n      throw error;\n    }\n  }\n\n  /**\n   * Cancel a specific stream\n   */\n  cancelStream(streamId: string): void {\n    const handler = this.streams.get(streamId);\n    if (handler) {\n      handler.cancel();\n      this.streams.delete(streamId);\n    }\n  }\n\n  /**\n   * Cancel all active streams\n   */\n  cancelAllStreams(): void {\n    this.streams.forEach(handler => handler.cancel());\n    this.streams.clear();\n  }\n\n  /**\n   * Get active stream IDs\n   */\n  getActiveStreams(): string[] {\n    return Array.from(this.streams.keys());\n  }\n\n  /**\n   * Get stream status\n   */\n  getStreamStatus(streamId: string): {\n    exists: boolean;\n    isStreaming: boolean;\n    message: StreamMessage | null;\n  } {\n    const handler = this.streams.get(streamId);\n    \n    if (!handler) {\n      return { exists: false, isStreaming: false, message: null };\n    }\n\n    return {\n      exists: true,\n      isStreaming: handler.isStreaming(),\n      message: handler.getCurrentMessage(),\n    };\n  }\n\n  /**\n   * Get number of active streams\n   */\n  getActiveStreamCount(): number {\n    return this.streams.size;\n  }\n}\n\n/**\n * Parse Server-Sent Events (SSE) data\n */\nexport function parseSSEData(data: string): any | null {\n  try {\n    if (data === '[DONE]') {\n      return { type: 'done' };\n    }\n    \n    const parsed = JSON.parse(data);\n    \n    // Handle different response formats\n    if (parsed.choices && parsed.choices[0]) {\n      const choice = parsed.choices[0];\n      \n      if (choice.delta && choice.delta.content) {\n        return {\n          type: 'content',\n          content: choice.delta.content,\n        };\n      }\n      \n      if (choice.message && choice.message.content) {\n        return {\n          type: 'content',\n          content: choice.message.content,\n        };\n      }\n    }\n    \n    // Handle CustomGPT format\n    if (parsed.content) {\n      return {\n        type: 'content',\n        content: parsed.content,\n        citations: parsed.citations || [],\n      };\n    }\n    \n    return parsed;\n  } catch (error) {\n    console.error('Failed to parse SSE data:', error);\n    return null;\n  }\n}\n\n/**\n * Create a mock stream for testing\n */\nexport function createMockStream(\n  content: string,\n  chunkSize: number = 10,\n  delay: number = 50\n): ReadableStream {\n  const chunks: string[] = [];\n  for (let i = 0; i < content.length; i += chunkSize) {\n    chunks.push(content.slice(i, i + chunkSize));\n  }\n\n  let index = 0;\n\n  return new ReadableStream({\n    start(controller) {\n      const sendChunk = () => {\n        if (index < chunks.length) {\n          const chunk = `data: ${JSON.stringify({\n            type: 'content',\n            content: chunks[index],\n          })}\\n\\n`;\n          \n          controller.enqueue(new TextEncoder().encode(chunk));\n          index++;\n          \n          setTimeout(sendChunk, delay);\n        } else {\n          const doneChunk = 'data: [DONE]\\n\\n';\n          controller.enqueue(new TextEncoder().encode(doneChunk));\n          controller.close();\n        }\n      };\n      \n      setTimeout(sendChunk, delay);\n    },\n  });\n}\n\n/**\n * Validate stream format\n */\nexport function validateStreamChunk(chunk: any): boolean {\n  if (!chunk || typeof chunk !== 'object') {\n    return false;\n  }\n\n  // Must have a type\n  if (!chunk.type || typeof chunk.type !== 'string') {\n    return false;\n  }\n\n  // Validate specific types\n  switch (chunk.type) {\n    case 'content':\n      return typeof chunk.content === 'string';\n    \n    case 'citation':\n      return Array.isArray(chunk.citations);\n    \n    case 'done':\n    case 'error':\n      return true;\n    \n    default:\n      return false;\n  }\n}\n\n// Global stream manager instance\nexport const globalStreamManager = new StreamManager();","import { create } from 'zustand';\nimport type { MessageStore, ChatMessage, Citation, FeedbackType } from '@/types';\nimport { getClient } from '@/lib/api/client';\nimport { useAgentStore } from './agents';\nimport { useConversationStore } from './conversations';\nimport { generateId } from '@/lib/utils';\nimport { globalStreamManager } from '@/lib/streaming/handler';\n\nexport const useMessageStore = create<MessageStore>((set, get) => ({\n  messages: new Map(),\n  streamingMessage: null,\n  isStreaming: false,\n  loading: false,\n  error: null,\n\n  sendMessage: async (content: string, files?: File[]) => {\n    const agentStore = useAgentStore.getState();\n    const conversationStore = useConversationStore.getState();\n    \n    const { currentAgent } = agentStore;\n    if (!currentAgent) {\n      throw new Error('No agent selected');\n    }\n\n    // Ensure we have a conversation\n    const conversation = await conversationStore.ensureConversation(\n      currentAgent.id,\n      content\n    );\n\n    set({ loading: true, error: null });\n\n    // Create user message\n    const userMessage: ChatMessage = {\n      id: generateId(),\n      role: 'user',\n      content,\n      timestamp: new Date().toISOString(),\n      status: 'sending',\n    };\n\n    // Add user message to store\n    get().addMessage(conversation.id, userMessage);\n\n    // Create assistant message placeholder\n    const assistantMessage: ChatMessage = {\n      id: generateId(),\n      role: 'assistant',\n      content: '',\n      timestamp: new Date().toISOString(),\n      citations: [],\n    };\n\n    set({ \n      streamingMessage: assistantMessage,\n      isStreaming: true,\n      loading: false,\n    });\n\n    try {\n      // Handle file uploads if present\n      if (files && files.length > 0) {\n        const client = getClient();\n        await Promise.all(\n          files.map(file => client.uploadFile(currentAgent.id, file))\n        );\n      }\n\n      // Update user message status\n      userMessage.status = 'sent';\n      get().addMessage(conversation.id, userMessage);\n\n      // Start streaming\n      const client = getClient();\n      \n      await client.sendMessageStream(\n        currentAgent.id,\n        conversation.id,\n        { prompt: content },\n        {\n          onChunk: (chunk) => {\n            if (chunk.type === 'content' && chunk.content) {\n              get().updateStreamingMessage(chunk.content, chunk.citations);\n            }\n          },\n          onComplete: () => {\n            const finalMessage = get().streamingMessage;\n            if (finalMessage) {\n              finalMessage.status = 'sent';\n              get().addMessage(conversation.id, finalMessage);\n            }\n            \n            set({ \n              streamingMessage: null,\n              isStreaming: false,\n            });\n          },\n          onError: (error) => {\n            console.error('Streaming error:', error);\n            \n            // Update assistant message with error\n            const errorMessage = get().streamingMessage;\n            if (errorMessage) {\n              errorMessage.content = 'Sorry, I encountered an error while processing your message.';\n              errorMessage.status = 'error';\n              get().addMessage(conversation.id, errorMessage);\n            }\n            \n            set({ \n              streamingMessage: null,\n              isStreaming: false,\n              error: error.message,\n            });\n          },\n        }\n      );\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      \n      // Update user message status\n      userMessage.status = 'error';\n      get().addMessage(conversation.id, userMessage);\n      \n      set({ \n        streamingMessage: null,\n        isStreaming: false,\n        error: error instanceof Error ? error.message : 'Failed to send message',\n        loading: false,\n      });\n      \n      throw error;\n    }\n  },\n\n  addMessage: (conversationId: string, message: ChatMessage) => {\n    set(state => {\n      const newMessages = new Map(state.messages);\n      const conversationMessages = newMessages.get(conversationId) || [];\n      \n      // Check if message already exists and update it\n      const existingIndex = conversationMessages.findIndex(m => m.id === message.id);\n      if (existingIndex >= 0) {\n        conversationMessages[existingIndex] = message;\n      } else {\n        conversationMessages.push(message);\n      }\n      \n      newMessages.set(conversationId, conversationMessages);\n      \n      return { messages: newMessages };\n    });\n  },\n\n  updateStreamingMessage: (content: string, citations?: Citation[]) => {\n    set(state => {\n      if (!state.streamingMessage) return state;\n      \n      return {\n        streamingMessage: {\n          ...state.streamingMessage,\n          content: state.streamingMessage.content + content,\n          citations: citations || state.streamingMessage.citations,\n        },\n      };\n    });\n  },\n\n  clearMessages: (conversationId?: string) => {\n    set(state => {\n      if (conversationId) {\n        const newMessages = new Map(state.messages);\n        newMessages.delete(conversationId);\n        return { messages: newMessages };\n      } else {\n        // Clear all messages\n        return { messages: new Map() };\n      }\n    });\n  },\n\n  updateMessageFeedback: async (messageId: string, feedback: FeedbackType) => {\n    const agentStore = useAgentStore.getState();\n    const conversationStore = useConversationStore.getState();\n    \n    const { currentAgent } = agentStore;\n    const { currentConversation } = conversationStore;\n    \n    if (!currentAgent || !currentConversation) return;\n\n    // Find the message\n    const conversationMessages = get().messages.get(currentConversation.id) || [];\n    const message = conversationMessages.find(m => m.id === messageId);\n    \n    if (!message) return;\n\n    try {\n      // Update local state immediately\n      const updatedMessage = { ...message, feedback };\n      get().addMessage(currentConversation.id, updatedMessage);\n\n      // Send to API (assuming we have the prompt ID)\n      // Note: This would need to be adjusted based on the actual API structure\n      // const client = getClient();\n      // await client.updateMessageFeedback(currentAgent.id, currentConversation.id, promptId, {\n      //   reaction: feedback === 'like' ? 'liked' : 'disliked'\n      // });\n    } catch (error) {\n      console.error('Failed to update message feedback:', error);\n      // Revert local state on error\n      get().addMessage(currentConversation.id, message);\n    }\n  },\n\n  // Utility methods\n  getMessagesForConversation: (conversationId: string): ChatMessage[] => {\n    return get().messages.get(conversationId) || [];\n  },\n\n  cancelStreaming: () => {\n    globalStreamManager.cancelAllStreams();\n    set({ \n      streamingMessage: null,\n      isStreaming: false,\n    });\n  },\n\n  // Load messages for a conversation\n  loadMessages: async (conversationId: string) => {\n    const agentStore = useAgentStore.getState();\n    const { currentAgent } = agentStore;\n    \n    if (!currentAgent) return;\n\n    set({ loading: true, error: null });\n\n    try {\n      const client = getClient();\n      const response = await client.getMessages(currentAgent.id, conversationId);\n      const messages = response.data || [];\n      \n      // Convert API messages to our format\n      const formattedMessages: ChatMessage[] = messages.map(msg => ({\n        id: msg.id,\n        role: msg.role,\n        content: msg.content,\n        citations: msg.citations || [],\n        timestamp: msg.timestamp,\n        status: 'sent',\n        feedback: msg.feedback,\n      }));\n\n      set(state => {\n        const newMessages = new Map(state.messages);\n        newMessages.set(conversationId, formattedMessages);\n        return { \n          messages: newMessages,\n          loading: false,\n        };\n      });\n    } catch (error) {\n      console.error('Failed to load messages:', error);\n      set({ \n        error: error instanceof Error ? error.message : 'Failed to load messages',\n        loading: false,\n      });\n    }\n  },\n}));","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport type { UIStore } from '@/types';\n\nexport const useUIStore = create<UIStore>()(\n  persist(\n    (set) => ({\n      sidebarOpen: true,\n      settingsOpen: false,\n      theme: 'light',\n      fontSize: 'md',\n\n      setSidebarOpen: (open: boolean) => {\n        set({ sidebarOpen: open });\n      },\n\n      setSettingsOpen: (open: boolean) => {\n        set({ settingsOpen: open });\n      },\n\n      setTheme: (theme: 'light' | 'dark') => {\n        set({ theme });\n        \n        // Apply theme to document\n        if (typeof window !== 'undefined') {\n          document.documentElement.className = theme;\n        }\n      },\n\n      setFontSize: (size: 'sm' | 'md' | 'lg') => {\n        set({ fontSize: size });\n        \n        // Apply font size to document\n        if (typeof window !== 'undefined') {\n          const root = document.documentElement;\n          root.classList.remove('text-sm', 'text-base', 'text-lg');\n          \n          switch (size) {\n            case 'sm':\n              root.classList.add('text-sm');\n              break;\n            case 'lg':\n              root.classList.add('text-lg');\n              break;\n            default:\n              root.classList.add('text-base');\n          }\n        }\n      },\n    }),\n    {\n      name: 'customgpt-ui',\n      partialize: (state) => ({\n        sidebarOpen: state.sidebarOpen,\n        theme: state.theme,\n        fontSize: state.fontSize,\n      }),\n      onRehydrateStorage: () => (state) => {\n        // Apply theme and font size on rehydration\n        if (typeof window !== 'undefined' && state) {\n          document.documentElement.className = state.theme;\n          \n          const root = document.documentElement;\n          root.classList.remove('text-sm', 'text-base', 'text-lg');\n          \n          switch (state.fontSize) {\n            case 'sm':\n              root.classList.add('text-sm');\n              break;\n            case 'lg':\n              root.classList.add('text-lg');\n              break;\n            default:\n              root.classList.add('text-base');\n          }\n        }\n      },\n    }\n  )\n);","import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center rounded-lg text-sm font-medium transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-brand-500 focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none',\n  {\n    variants: {\n      variant: {\n        default: 'bg-brand-500 text-white hover:bg-brand-600 shadow-sm',\n        destructive: 'bg-red-500 text-white hover:bg-red-600 shadow-sm',\n        outline: 'border border-gray-300 bg-white hover:bg-gray-50 text-gray-900',\n        secondary: 'bg-gray-100 text-gray-900 hover:bg-gray-200',\n        ghost: 'hover:bg-gray-100 text-gray-900',\n        link: 'text-brand-600 underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 py-2 px-4',\n        sm: 'h-8 px-3 text-xs',\n        lg: 'h-12 px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };","'use client';\n\nimport React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  BookOpen, \n  ChevronDown, \n  ExternalLink \n} from 'lucide-react';\n\nimport type { CitationProps, Citation } from '@/types';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\n\ninterface CitationCardProps {\n  citation: Citation;\n  index: number;\n  isExpanded: boolean;\n  onToggle: () => void;\n  onClick?: (citation: Citation) => void;\n}\n\nconst CitationCard: React.FC<CitationCardProps> = ({\n  citation,\n  index,\n  isExpanded,\n  onToggle,\n  onClick,\n}) => {\n  return (\n    <div className=\"border border-gray-200 rounded-lg overflow-hidden transition-all hover:border-gray-300\">\n      <button\n        onClick={onToggle}\n        className=\"w-full px-3 py-2 flex items-center gap-3 hover:bg-gray-50 transition-colors text-left\"\n      >\n        {/* Citation Index */}\n        <div className=\"flex-shrink-0 w-6 h-6 rounded bg-brand-100 flex items-center justify-center\">\n          <span className=\"text-xs font-medium text-brand-700\">{index}</span>\n        </div>\n        \n        {/* Citation Info */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"font-medium text-sm text-gray-900 line-clamp-1\">\n            {citation.title}\n          </div>\n          <div className=\"text-xs text-gray-500 line-clamp-1\">\n            {citation.source || citation.url}\n          </div>\n        </div>\n        \n        {/* Expand Icon */}\n        <ChevronDown\n          className={cn(\n            'w-4 h-4 text-gray-400 transition-transform flex-shrink-0',\n            isExpanded && 'rotate-180'\n          )}\n        />\n      </button>\n      \n      {/* Expanded Content */}\n      <AnimatePresence>\n        {isExpanded && (\n          <motion.div\n            initial={{ height: 0, opacity: 0 }}\n            animate={{ height: 'auto', opacity: 1 }}\n            exit={{ height: 0, opacity: 0 }}\n            transition={{ duration: 0.2 }}\n            className=\"overflow-hidden\"\n          >\n            <div className=\"px-3 py-2 border-t border-gray-100 bg-gray-50\">\n              <p className=\"text-sm text-gray-700 mb-2\">\n                {citation.content}\n              </p>\n              \n              {/* Confidence Score */}\n              {citation.confidence && (\n                <div className=\"mb-2\">\n                  <div className=\"flex items-center justify-between text-xs text-gray-500 mb-1\">\n                    <span>Relevance</span>\n                    <span>{Math.round(citation.confidence * 100)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-1.5\">\n                    <div \n                      className=\"bg-brand-500 h-1.5 rounded-full transition-all\"\n                      style={{ width: `${citation.confidence * 100}%` }}\n                    />\n                  </div>\n                </div>\n              )}\n              \n              {/* Actions */}\n              <div className=\"flex items-center gap-2\">\n                {citation.url && (\n                  <a\n                    href={citation.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"inline-flex items-center gap-1 text-xs text-brand-600 hover:text-brand-700 transition-colors\"\n                  >\n                    View source\n                    <ExternalLink className=\"w-3 h-3\" />\n                  </a>\n                )}\n                \n                {onClick && (\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    onClick={() => onClick(citation)}\n                    className=\"h-6 px-2 text-xs\"\n                  >\n                    View details\n                  </Button>\n                )}\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport const CitationList: React.FC<CitationProps> = ({ \n  citations, \n  onCitationClick,\n  maxVisible = 5,\n  className \n}) => {\n  const [expanded, setExpanded] = useState<Set<string>>(new Set());\n  const [showAll, setShowAll] = useState(false);\n  \n  const visibleCitations = showAll ? citations : citations.slice(0, maxVisible);\n  const hasMore = citations.length > maxVisible;\n\n  const toggleExpanded = (citationId: string) => {\n    const newExpanded = new Set(expanded);\n    if (expanded.has(citationId)) {\n      newExpanded.delete(citationId);\n    } else {\n      newExpanded.add(citationId);\n    }\n    setExpanded(newExpanded);\n  };\n\n  if (citations.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={cn('mt-4 space-y-2', className)}>\n      {/* Header */}\n      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n        <BookOpen className=\"w-4 h-4\" />\n        <span className=\"font-medium\">Sources</span>\n        <span className=\"text-gray-400\">({citations.length})</span>\n        \n        {hasMore && (\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={() => setShowAll(!showAll)}\n            className=\"ml-auto h-6 px-2 text-xs\"\n          >\n            {showAll ? 'Show less' : `Show all ${citations.length}`}\n          </Button>\n        )}\n      </div>\n      \n      {/* Citations */}\n      <div className=\"space-y-2\">\n        <AnimatePresence>\n          {visibleCitations.map((citation, idx) => (\n            <motion.div\n              key={citation.id}\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              transition={{ duration: 0.2, delay: idx * 0.05 }}\n            >\n              <CitationCard\n                citation={citation}\n                index={idx + 1}\n                isExpanded={expanded.has(citation.id)}\n                onToggle={() => toggleExpanded(citation.id)}\n                onClick={onCitationClick}\n              />\n            </motion.div>\n          ))}\n        </AnimatePresence>\n      </div>\n      \n      {/* Load More Button */}\n      {hasMore && !showAll && (\n        <div className=\"pt-2\">\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => setShowAll(true)}\n            className=\"w-full\"\n          >\n            Show {citations.length - maxVisible} more sources\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};","'use client';\n\nimport React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { oneDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { motion } from 'framer-motion';\nimport { \n  Bot, \n  User, \n  Copy, \n  ThumbsUp, \n  ThumbsDown, \n  RotateCw,\n  ExternalLink \n} from 'lucide-react';\nimport { toast } from 'sonner';\n\nimport type { MessageProps, Citation, ChatMessage } from '@/types';\nimport { cn, copyToClipboard, formatTimestamp } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { CitationList } from './CitationList';\n\ninterface CodeBlockProps {\n  language: string;\n  value: string;\n}\n\nconst CodeBlock: React.FC<CodeBlockProps> = ({ language, value }) => {\n  const [copied, setCopied] = useState(false);\n  \n  const handleCopy = async () => {\n    const success = await copyToClipboard(value);\n    if (success) {\n      setCopied(true);\n      toast.success('Code copied to clipboard');\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  return (\n    <div className=\"relative group\">\n      <div className=\"absolute right-2 top-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n        <Button\n          size=\"sm\"\n          variant=\"ghost\"\n          onClick={handleCopy}\n          className=\"h-6 px-2 text-xs bg-gray-800 text-white hover:bg-gray-700\"\n        >\n          {copied ? 'Copied!' : 'Copy'}\n        </Button>\n      </div>\n      <SyntaxHighlighter\n        language={language}\n        style={oneDark}\n        customStyle={{\n          margin: 0,\n          borderRadius: '0.5rem',\n          fontSize: '0.875rem',\n        }}\n      >\n        {value}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nconst StreamingCursor: React.FC = () => (\n  <span className=\"inline-block w-0.5 h-4 bg-gray-900 animate-blink ml-0.5 align-middle\" />\n);\n\ninterface MessageContentProps {\n  content: string;\n  isStreaming?: boolean;\n}\n\nconst MessageContent: React.FC<MessageContentProps> = ({ content, isStreaming }) => {\n  return (\n    <div className=\"prose prose-sm max-w-none text-gray-900\">\n      <ReactMarkdown\n        remarkPlugins={[remarkGfm]}\n        components={{\n          code({ className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || '');\n            const isInline = !match;\n            return !isInline && match ? (\n              <CodeBlock\n                language={match[1]}\n                value={String(children).replace(/\\n$/, '')}\n                {...props}\n              />\n            ) : (\n              <code className=\"px-1 py-0.5 rounded bg-gray-100 text-sm font-medium\" {...props}>\n                {children}\n              </code>\n            );\n          },\n          a({ href, children }) {\n            return (\n              <a\n                href={href}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-brand-600 hover:text-brand-700 no-underline hover:underline inline-flex items-center gap-1\"\n              >\n                {children}\n                <ExternalLink className=\"w-3 h-3\" />\n              </a>\n            );\n          },\n        }}\n      >\n        {content}\n      </ReactMarkdown>\n      {isStreaming && <StreamingCursor />}\n    </div>\n  );\n};\n\ninterface MessageActionsProps {\n  message: ChatMessage;\n  onFeedback?: (feedback: 'like' | 'dislike') => void;\n}\n\nconst MessageActions: React.FC<MessageActionsProps> = ({ message, onFeedback }) => {\n  const [feedback, setFeedback] = useState<'like' | 'dislike' | null>(\n    message.feedback || null\n  );\n\n  const handleCopy = async () => {\n    const success = await copyToClipboard(message.content);\n    if (success) {\n      toast.success('Message copied to clipboard');\n    }\n  };\n\n  const handleFeedback = (type: 'like' | 'dislike') => {\n    setFeedback(type);\n    onFeedback?.(type);\n    toast.success('Thanks for your feedback!');\n  };\n\n  const handleRegenerate = () => {\n    // This would trigger message regeneration\n    toast.info('Regenerating response...');\n  };\n\n  return (\n    <div className=\"mt-3 flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        onClick={handleCopy}\n        className=\"h-8 w-8 text-gray-500 hover:text-gray-700\"\n        title=\"Copy message\"\n      >\n        <Copy className=\"h-4 w-4\" />\n      </Button>\n      \n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        onClick={() => handleFeedback('like')}\n        className={cn(\n          'h-8 w-8 text-gray-500 hover:text-gray-700',\n          feedback === 'like' && 'text-green-600 hover:text-green-700'\n        )}\n        title=\"Good response\"\n      >\n        <ThumbsUp className=\"h-4 w-4\" />\n      </Button>\n      \n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        onClick={() => handleFeedback('dislike')}\n        className={cn(\n          'h-8 w-8 text-gray-500 hover:text-gray-700',\n          feedback === 'dislike' && 'text-red-600 hover:text-red-700'\n        )}\n        title=\"Bad response\"\n      >\n        <ThumbsDown className=\"h-4 w-4\" />\n      </Button>\n      \n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        onClick={handleRegenerate}\n        className=\"h-8 w-8 text-gray-500 hover:text-gray-700\"\n        title=\"Regenerate response\"\n      >\n        <RotateCw className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n};\n\nexport const Message: React.FC<MessageProps> = ({ \n  message, \n  isStreaming = false, \n  isLast = false,\n  onCitationClick,\n  onFeedback,\n  className \n}) => {\n  const isUser = message.role === 'user';\n  \n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3 }}\n      className={cn(\n        'group relative px-4 py-6 transition-colors',\n        isUser ? 'bg-white' : 'bg-gray-50 border-y border-gray-100',\n        'hover:bg-opacity-80',\n        className\n      )}\n    >\n      <div className=\"max-w-3xl mx-auto flex gap-4\">\n        {/* Avatar */}\n        <div className=\"flex-shrink-0\">\n          {isUser ? (\n            <div className=\"w-8 h-8 rounded-full bg-gray-800 flex items-center justify-center\">\n              <User className=\"w-4 h-4 text-white\" />\n            </div>\n          ) : (\n            <div className=\"w-8 h-8 rounded-full bg-white border border-gray-200 flex items-center justify-center\">\n              <Bot className=\"w-4 h-4 text-brand-600\" />\n            </div>\n          )}\n        </div>\n        \n        {/* Content */}\n        <div className=\"flex-1 overflow-hidden\">\n          {/* Message Status */}\n          {message.status && message.status !== 'sent' && (\n            <div className=\"mb-2 text-xs text-gray-500\">\n              {message.status === 'sending' && 'Sending...'}\n              {message.status === 'error' && (\n                <span className=\"text-red-500\">Failed to send</span>\n              )}\n            </div>\n          )}\n          \n          {/* Message Content */}\n          {isUser ? (\n            <p className=\"text-gray-900 whitespace-pre-wrap\">{message.content}</p>\n          ) : (\n            <MessageContent \n              content={message.content} \n              isStreaming={isStreaming}\n            />\n          )}\n          \n          {/* Citations */}\n          {message.citations && message.citations.length > 0 && (\n            <CitationList \n              citations={message.citations}\n              onCitationClick={onCitationClick}\n            />\n          )}\n          \n          {/* Timestamp */}\n          <div className=\"mt-2 text-xs text-gray-400\">\n            {formatTimestamp(message.timestamp)}\n          </div>\n          \n          {/* Actions */}\n          {!isUser && !isStreaming && (\n            <MessageActions \n              message={message}\n              onFeedback={onFeedback}\n            />\n          )}\n        </div>\n      </div>\n    </motion.div>\n  );\n};","'use client';\n\nimport React, { useState, useRef, useCallback, KeyboardEvent, FormEvent } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Send, \n  Square, \n  Paperclip, \n  X,\n  Upload,\n  AlertCircle \n} from 'lucide-react';\nimport { toast } from 'sonner';\n\nimport type { InputProps, FileUpload } from '@/types';\nimport { cn, formatFileSize, getFileIcon, isFileTypeAllowed, generateId, CONSTANTS } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\n\ninterface FileChipProps {\n  file: FileUpload;\n  onRemove: () => void;\n}\n\nconst FileChip: React.FC<FileChipProps> = ({ file, onRemove }) => {\n  const fileIcon = getFileIcon(file.type);\n  \n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      exit={{ opacity: 0, scale: 0.9 }}\n      className=\"flex items-center gap-2 px-3 py-1.5 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n    >\n      <div className=\"text-gray-600\">{fileIcon}</div>\n      <div className=\"flex-1 min-w-0\">\n        <div className=\"text-sm font-medium text-gray-900 truncate\">\n          {file.name}\n        </div>\n        <div className=\"text-xs text-gray-500 flex items-center gap-2\">\n          <span>{formatFileSize(file.size)}</span>\n          {file.status === 'uploading' && (\n            <>\n              <span>•</span>\n              <span>{file.progress}%</span>\n            </>\n          )}\n          {file.status === 'error' && (\n            <>\n              <span>•</span>\n              <span className=\"text-red-500 flex items-center gap-1\">\n                <AlertCircle className=\"w-3 h-3\" />\n                Error\n              </span>\n            </>\n          )}\n        </div>\n      </div>\n      \n      {/* Progress Bar */}\n      {file.status === 'uploading' && (\n        <div className=\"absolute bottom-0 left-0 right-0 h-0.5 bg-gray-200 rounded-b\">\n          <div \n            className=\"h-full bg-brand-500 rounded-b transition-all duration-300\"\n            style={{ width: `${file.progress}%` }}\n          />\n        </div>\n      )}\n      \n      <button\n        onClick={onRemove}\n        className=\"p-0.5 rounded hover:bg-gray-300 transition-colors\"\n        disabled={file.status === 'uploading'}\n      >\n        <X className=\"w-3 h-3 text-gray-500\" />\n      </button>\n    </motion.div>\n  );\n};\n\ninterface FileUploadButtonProps {\n  onUpload: (files: File[]) => void;\n  disabled?: boolean;\n}\n\nconst FileUploadButton: React.FC<FileUploadButtonProps> = ({ onUpload, disabled }) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  \n  const handleClick = () => {\n    fileInputRef.current?.click();\n  };\n  \n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || []);\n    if (files.length > 0) {\n      onUpload(files);\n      e.target.value = '';\n    }\n  };\n  \n  return (\n    <>\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        multiple\n        accept={CONSTANTS.ACCEPTED_FILE_TYPES.join(',')}\n        onChange={handleChange}\n        className=\"hidden\"\n      />\n      <Button\n        type=\"button\"\n        size=\"icon\"\n        variant=\"ghost\"\n        onClick={handleClick}\n        disabled={disabled}\n        className=\"h-10 w-10 text-gray-600 hover:text-gray-800\"\n        title=\"Upload files\"\n      >\n        <Paperclip className=\"h-5 w-5\" />\n      </Button>\n    </>\n  );\n};\n\nexport const ChatInput: React.FC<InputProps> = ({ \n  onSend,\n  disabled = false,\n  placeholder = \"Send a message...\",\n  maxLength = CONSTANTS.MAX_MESSAGE_LENGTH,\n  className \n}) => {\n  const [input, setInput] = useState('');\n  const [files, setFiles] = useState<FileUpload[]>([]);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  \n  // Auto-resize textarea\n  const adjustTextareaHeight = useCallback(() => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      const scrollHeight = textarea.scrollHeight;\n      const maxHeight = 200; // Max height in pixels\n      textarea.style.height = `${Math.min(scrollHeight, maxHeight)}px`;\n    }\n  }, []);\n  \n  // Handle text input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = e.target.value;\n    if (value.length <= maxLength) {\n      setInput(value);\n      adjustTextareaHeight();\n    }\n  };\n  \n  // Handle key presses\n  const handleKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e as any);\n    }\n  };\n  \n  // Handle form submission\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    \n    if (disabled) return;\n    if (!input.trim() && files.length === 0) return;\n    \n    // Convert FileUpload objects to File objects\n    const fileObjects = files\n      .filter(f => f.status === 'uploaded')\n      .map(f => {\n        // In a real implementation, you'd have the actual File objects\n        // For now, we'll create mock File objects\n        return new File([''], f.name, { type: f.type });\n      });\n    \n    onSend(input.trim(), fileObjects);\n    \n    // Reset form\n    setInput('');\n    setFiles([]);\n    \n    // Reset textarea height\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n    }\n    \n    // Focus textarea\n    setTimeout(() => {\n      textareaRef.current?.focus();\n    }, 0);\n  };\n  \n  // Handle file uploads\n  const handleFileUpload = useCallback((newFiles: File[]) => {\n    const validFiles = newFiles.filter(file => {\n      // Check file size\n      if (file.size > CONSTANTS.MAX_FILE_SIZE) {\n        toast.error(`File \"${file.name}\" is too large. Maximum size is ${formatFileSize(CONSTANTS.MAX_FILE_SIZE)}`);\n        return false;\n      }\n      \n      // Check file type\n      if (!isFileTypeAllowed(file.type, CONSTANTS.ACCEPTED_FILE_TYPES)) {\n        toast.error(`File type \"${file.type}\" is not supported`);\n        return false;\n      }\n      \n      return true;\n    });\n    \n    const uploadFiles: FileUpload[] = validFiles.map(file => ({\n      id: generateId(),\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      status: 'uploading',\n      progress: 0,\n    }));\n    \n    setFiles(prev => [...prev, ...uploadFiles]);\n    \n    // Simulate file upload\n    uploadFiles.forEach(uploadFile => {\n      simulateUpload(uploadFile);\n    });\n    \n  }, []);\n  \n  // Simulate file upload progress\n  const simulateUpload = (uploadFile: FileUpload) => {\n    let progress = 0;\n    const interval = setInterval(() => {\n      progress += Math.random() * 20;\n      \n      if (progress >= 100) {\n        progress = 100;\n        clearInterval(interval);\n        \n        setFiles(prev => prev.map(f => \n          f.id === uploadFile.id \n            ? { ...f, status: 'uploaded' as const, progress: 100 }\n            : f\n        ));\n      } else {\n        setFiles(prev => prev.map(f => \n          f.id === uploadFile.id \n            ? { ...f, progress: Math.round(progress) }\n            : f\n        ));\n      }\n    }, 100);\n  };\n  \n  // Remove file\n  const removeFile = (fileId: string) => {\n    setFiles(prev => prev.filter(f => f.id !== fileId));\n  };\n  \n  // Dropzone configuration\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleFileUpload,\n    noClick: true,\n    noKeyboard: true,\n    accept: CONSTANTS.ACCEPTED_FILE_TYPES.reduce((acc, type) => {\n      acc[type] = [];\n      return acc;\n    }, {} as Record<string, string[]>),\n    maxSize: CONSTANTS.MAX_FILE_SIZE,\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n  });\n  \n  const canSend = !disabled && (input.trim() || files.some(f => f.status === 'uploaded'));\n  \n  return (\n    <div \n      {...getRootProps()}\n      className={cn(\n        'border-t border-gray-200 bg-white px-4 py-3 relative',\n        isDragActive && 'bg-brand-50',\n        className\n      )}\n    >\n      <input {...getInputProps()} />\n      \n      {/* Drag Overlay */}\n      <AnimatePresence>\n        {isDragActive && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"absolute inset-0 bg-brand-50 border-2 border-dashed border-brand-300 rounded-lg flex items-center justify-center z-10\"\n          >\n            <div className=\"text-center\">\n              <Upload className=\"w-8 h-8 text-brand-600 mx-auto mb-2\" />\n              <p className=\"text-brand-700 font-medium\">Drop files here to upload</p>\n              <p className=\"text-brand-600 text-sm\">\n                Supports PDF, DOC, TXT, and more\n              </p>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n      \n      {/* File Preview */}\n      <AnimatePresence>\n        {files.length > 0 && (\n          <motion.div\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: 'auto' }}\n            exit={{ opacity: 0, height: 0 }}\n            className=\"mb-2 flex flex-wrap gap-2\"\n          >\n            {files.map((file) => (\n              <FileChip\n                key={file.id}\n                file={file}\n                onRemove={() => removeFile(file.id)}\n              />\n            ))}\n          </motion.div>\n        )}\n      </AnimatePresence>\n      \n      <form onSubmit={handleSubmit} className=\"flex items-end gap-2\">\n        {/* File Upload Button */}\n        <FileUploadButton\n          onUpload={handleFileUpload}\n          disabled={disabled}\n        />\n        \n        {/* Text Input */}\n        <div className=\"flex-1 relative\">\n          <textarea\n            ref={textareaRef}\n            value={input}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            placeholder={placeholder}\n            disabled={disabled}\n            rows={1}\n            className={cn(\n              'w-full resize-none rounded-lg border border-gray-300',\n              'px-3 py-2 pr-12',\n              'focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent',\n              'disabled:opacity-50 disabled:cursor-not-allowed',\n              'min-h-[44px] max-h-[200px]',\n              'placeholder:text-gray-500'\n            )}\n            style={{\n              height: 'auto',\n              overflowY: input.split('\\n').length > 5 ? 'auto' : 'hidden',\n            }}\n          />\n          \n          {/* Character Count */}\n          {input.length > 0 && (\n            <div className=\"absolute bottom-2 right-2 text-xs text-gray-400 pointer-events-none\">\n              {input.length}/{maxLength}\n            </div>\n          )}\n        </div>\n        \n        {/* Send Button */}\n        <Button\n          type=\"submit\"\n          size=\"icon\"\n          disabled={!canSend}\n          className={cn(\n            'h-10 w-10 flex-shrink-0',\n            disabled && 'animate-pulse'\n          )}\n          title={disabled ? 'Stop generating' : 'Send message'}\n        >\n          {disabled ? (\n            <Square className=\"h-5 w-5\" />\n          ) : (\n            <Send className=\"h-5 w-5\" />\n          )}\n        </Button>\n      </form>\n      \n      {/* Input Hints */}\n      <div className=\"mt-2 flex items-center justify-between text-xs text-gray-500\">\n        <span>Press Enter to send, Shift+Enter for new line</span>\n        <span>Supports {CONSTANTS.ACCEPTED_FILE_TYPES.length}+ file formats</span>\n      </div>\n    </div>\n  );\n};","'use client';\n\nimport React from 'react';\nimport { Bot } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface TypingIndicatorProps {\n  className?: string;\n}\n\nexport const TypingIndicator: React.FC<TypingIndicatorProps> = ({ className }) => {\n  return (\n    <div className={cn(\n      'px-4 py-6 bg-gray-50 border-y border-gray-100',\n      className\n    )}>\n      <div className=\"max-w-3xl mx-auto flex gap-4\">\n        {/* Avatar */}\n        <div className=\"w-8 h-8 rounded-full bg-white border border-gray-200 flex items-center justify-center flex-shrink-0\">\n          <Bot className=\"w-4 h-4 text-brand-600\" />\n        </div>\n        \n        {/* Typing Animation */}\n        <div className=\"flex items-center gap-1 py-2\">\n          <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce-subtle\" />\n          <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce-subtle delay-100\" />\n          <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce-subtle delay-200\" />\n        </div>\n      </div>\n    </div>\n  );\n};","'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Bot, \n  ChevronDown, \n  Settings, \n  RefreshCw,\n  AlertCircle,\n  Check\n} from 'lucide-react';\nimport { toast } from 'sonner';\n\nimport type { Agent } from '@/types';\nimport { useAgentStore } from '@/store';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\n\ninterface AgentSelectorProps {\n  className?: string;\n  showSettings?: boolean;\n  onSettingsClick?: (agent: Agent) => void;\n}\n\ninterface AgentItemProps {\n  agent: Agent;\n  isSelected: boolean;\n  onSelect: (agent: Agent) => void;\n  onSettingsClick?: (agent: Agent) => void;\n}\n\nconst AgentItem: React.FC<AgentItemProps> = ({ \n  agent, \n  isSelected, \n  onSelect, \n  onSettingsClick \n}) => {\n  return (\n    <div\n      className={cn(\n        'flex items-center justify-between p-3 rounded-lg cursor-pointer transition-colors group',\n        'hover:bg-gray-50',\n        isSelected && 'bg-brand-50 hover:bg-brand-100'\n      )}\n      onClick={() => onSelect(agent)}\n    >\n      <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n        {/* Avatar */}\n        <div className={cn(\n          'w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0',\n          isSelected ? 'bg-brand-600' : 'bg-gray-200'\n        )}>\n          <Bot className={cn(\n            'w-4 h-4',\n            isSelected ? 'text-white' : 'text-gray-600'\n          )} />\n        </div>\n        \n        {/* Agent Info */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center gap-2\">\n            <h3 className=\"font-medium text-gray-900 truncate\">\n              {agent.project_name}\n            </h3>\n            {isSelected && (\n              <Check className=\"w-4 h-4 text-brand-600 flex-shrink-0\" />\n            )}\n          </div>\n          \n          {agent.settings?.agent_capability && (\n            <p className=\"text-sm text-gray-500 truncate mt-0.5\">\n              {agent.settings.agent_capability}\n            </p>\n          )}\n          \n          {/* Metadata */}\n          <div className=\"flex items-center gap-3 mt-1 text-xs text-gray-400\">\n            {agent.settings?.chatbot_model && (\n              <span>Model: {agent.settings.chatbot_model}</span>\n            )}\n            <span>Status: {agent.is_chat_active ? 'Active' : 'Inactive'}</span>\n          </div>\n        </div>\n      </div>\n      \n      {/* Settings Button */}\n      {onSettingsClick && (\n        <Button\n          size=\"icon\"\n          variant=\"ghost\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onSettingsClick(agent);\n          }}\n          className=\"opacity-0 group-hover:opacity-100 transition-opacity h-6 w-6 text-gray-400 hover:text-gray-600\"\n          title=\"Agent Settings\"\n        >\n          <Settings className=\"h-3 w-3\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport const AgentSelector: React.FC<AgentSelectorProps> = ({ \n  className,\n  showSettings = true,\n  onSettingsClick\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  \n  const { \n    agents, \n    currentAgent, \n    loading, \n    error, \n    fetchAgents, \n    selectAgent \n  } = useAgentStore();\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }\n  }, [isOpen]);\n\n  const handleRefresh = async () => {\n    try {\n      await fetchAgents();\n      toast.success('Agents refreshed');\n    } catch (error) {\n      toast.error('Failed to refresh agents');\n    }\n  };\n\n  const handleSelectAgent = (agent: Agent) => {\n    selectAgent(agent);\n    setIsOpen(false);\n    toast.success(`Switched to ${agent.project_name}`);\n  };\n\n  if (loading && agents.length === 0) {\n    return (\n      <div className={cn('p-3 bg-white border rounded-lg', className)}>\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-8 h-8 rounded-full bg-gray-200 animate-pulse\" />\n          <div className=\"flex-1\">\n            <div className=\"h-4 bg-gray-200 rounded animate-pulse mb-2\" />\n            <div className=\"h-3 bg-gray-100 rounded animate-pulse w-3/4\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error && agents.length === 0) {\n    return (\n      <div className={cn('p-3 bg-white border rounded-lg', className)}>\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-8 h-8 rounded-full bg-red-100 flex items-center justify-center\">\n            <AlertCircle className=\"w-4 h-4 text-red-600\" />\n          </div>\n          <div className=\"flex-1\">\n            <p className=\"text-sm text-red-600 font-medium\">Failed to load agents</p>\n            <p className=\"text-xs text-red-500\">{error}</p>\n          </div>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={handleRefresh}\n            className=\"text-red-600 hover:text-red-700\"\n          >\n            <RefreshCw className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentAgent && agents.length === 0) {\n    return (\n      <div className={cn('p-3 bg-white border rounded-lg', className)}>\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center\">\n            <Bot className=\"w-4 h-4 text-gray-600\" />\n          </div>\n          <div className=\"flex-1\">\n            <p className=\"text-sm text-gray-600 font-medium\">No agents available</p>\n            <p className=\"text-xs text-gray-500\">Check your API configuration</p>\n          </div>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            onClick={handleRefresh}\n            disabled={loading}\n          >\n            <RefreshCw className={cn('w-4 h-4', loading && 'animate-spin')} />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn('relative', className)} ref={dropdownRef}>\n      {/* Selected Agent Display */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className={cn(\n          'w-full p-3 bg-white border rounded-lg text-left transition-colors',\n          'hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent',\n          isOpen && 'ring-2 ring-brand-500 border-transparent'\n        )}\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n            {/* Avatar */}\n            <div className=\"w-8 h-8 rounded-full bg-brand-600 flex items-center justify-center flex-shrink-0\">\n              <Bot className=\"w-4 h-4 text-white\" />\n            </div>\n            \n            {/* Agent Info */}\n            <div className=\"flex-1 min-w-0\">\n              <h3 className=\"font-medium text-gray-900 truncate\">\n                {currentAgent?.project_name || 'Select Agent'}\n              </h3>\n              {currentAgent?.settings?.agent_capability && (\n                <p className=\"text-sm text-gray-500 truncate\">\n                  {currentAgent.settings.agent_capability}\n                </p>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            {/* Refresh Button */}\n            <Button\n              size=\"icon\"\n              variant=\"ghost\"\n              onClick={(e) => {\n                e.stopPropagation();\n                handleRefresh();\n              }}\n              disabled={loading}\n              className=\"h-6 w-6 text-gray-400 hover:text-gray-600\"\n              title=\"Refresh Agents\"\n            >\n              <RefreshCw className={cn('h-3 w-3', loading && 'animate-spin')} />\n            </Button>\n            \n            {/* Dropdown Arrow */}\n            <ChevronDown className={cn(\n              'w-4 h-4 text-gray-400 transition-transform',\n              isOpen && 'rotate-180'\n            )} />\n          </div>\n        </div>\n      </button>\n\n      {/* Dropdown */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            transition={{ duration: 0.2 }}\n            className=\"absolute top-full left-0 right-0 mt-2 bg-white border rounded-lg shadow-lg z-50 max-h-80 overflow-y-auto\"\n          >\n            <div className=\"p-2\">\n              {/* Header */}\n              <div className=\"px-2 py-1 mb-2\">\n                <h4 className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\n                  Available Agents ({Array.isArray(agents) ? agents.length : 0})\n                </h4>\n              </div>\n              \n              {/* Agent List */}\n              <div className=\"space-y-1\">\n                {Array.isArray(agents) && agents.length > 0 ? (\n                  agents.map((agent) => (\n                    <AgentItem\n                      key={agent.id}\n                      agent={agent}\n                      isSelected={currentAgent?.id === agent.id}\n                      onSelect={handleSelectAgent}\n                      onSettingsClick={showSettings ? onSettingsClick : undefined}\n                    />\n                  ))\n                ) : (\n                  <div className=\"px-2 py-4 text-center\">\n                    <p className=\"text-sm text-gray-500\">No agents found</p>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={handleRefresh}\n                      className=\"mt-2\"\n                    >\n                      <RefreshCw className=\"w-4 h-4 mr-2\" />\n                      Refresh\n                    </Button>\n                  </div>\n                )}\n              </div>\n              \n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};","'use client';\n\nimport React, { useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { Sparkles, Bot } from 'lucide-react';\n\nimport type { ChatMessage, Citation, Agent } from '@/types';\nimport { cn } from '@/lib/utils';\nimport { useMessageStore, useAgentStore, useConversationStore } from '@/store';\nimport { Message } from './Message';\nimport { ChatInput } from './ChatInput';\nimport { TypingIndicator } from './TypingIndicator';\nimport { AgentSelector } from './AgentSelector';\n\nconst EXAMPLE_PROMPTS = [\n  \"What can you help me with?\",\n  \"Explain this document\",\n  \"Summarize key points\",\n  \"Answer my questions\",\n];\n\ninterface ExamplePromptCardProps {\n  prompt: string;\n  onClick: (prompt: string) => void;\n}\n\nconst ExamplePromptCard: React.FC<ExamplePromptCardProps> = ({ prompt, onClick }) => {\n  return (\n    <button\n      onClick={() => onClick(prompt)}\n      className=\"p-3 text-left bg-white border border-gray-200 rounded-lg hover:border-gray-300 hover:shadow-sm transition-all text-sm text-gray-700\"\n    >\n      {prompt}\n    </button>\n  );\n};\n\ninterface WelcomeMessageProps {\n  onPromptClick: (prompt: string) => void;\n}\n\nconst WelcomeMessage: React.FC<WelcomeMessageProps> = ({ onPromptClick }) => {\n  const { currentAgent } = useAgentStore();\n  \n  return (\n    <div className=\"flex flex-col items-center justify-center h-full px-4 py-8\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"text-center max-w-md\"\n      >\n        {/* Logo */}\n        <div className=\"w-16 h-16 rounded-full bg-brand-100 flex items-center justify-center mb-6 mx-auto\">\n          <Sparkles className=\"w-8 h-8 text-brand-600\" />\n        </div>\n        \n        {/* Welcome Text */}\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n          Welcome to {currentAgent?.project_name || 'CustomGPT'}!\n        </h3>\n        <p className=\"text-gray-600 mb-8\">\n          I'm here to help answer your questions and assist with your tasks. How can I help you today?\n        </p>\n        \n        {/* Example Prompts */}\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 w-full\">\n          {EXAMPLE_PROMPTS.map((prompt, idx) => (\n            <motion.div\n              key={idx}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.3, delay: 0.1 + (idx * 0.1) }}\n            >\n              <ExamplePromptCard\n                prompt={prompt}\n                onClick={onPromptClick}\n              />\n            </motion.div>\n          ))}\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\ninterface MessageAreaProps {\n  className?: string;\n}\n\nconst MessageArea: React.FC<MessageAreaProps> = ({ className }) => {\n  const { \n    messages, \n    streamingMessage, \n    isStreaming,\n    sendMessage \n  } = useMessageStore();\n  const { currentConversation } = useConversationStore();\n  const scrollRef = useRef<HTMLDivElement>(null);\n  \n  const conversationMessages = currentConversation \n    ? messages.get(currentConversation.id) || []\n    : [];\n  \n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({\n        top: scrollRef.current.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [conversationMessages, streamingMessage]);\n  \n  const handleExamplePrompt = (prompt: string) => {\n    sendMessage(prompt);\n  };\n  \n  const handleCitationClick = (citation: Citation) => {\n    console.log('Citation clicked:', citation);\n    // Handle citation click - could open a modal or navigate to source\n  };\n  \n  const handleMessageFeedback = (messageId: string, feedback: 'like' | 'dislike') => {\n    // This would be handled by the message store\n    console.log('Message feedback:', messageId, feedback);\n  };\n  \n  return (\n    <div\n      ref={scrollRef}\n      className={cn(\n        'flex-1 overflow-y-auto scroll-smooth',\n        'bg-gradient-to-b from-gray-50 to-white',\n        className\n      )}\n    >\n      {/* Welcome Message */}\n      {conversationMessages.length === 0 && !streamingMessage && (\n        <WelcomeMessage onPromptClick={handleExamplePrompt} />\n      )}\n      \n      {/* Messages */}\n      {conversationMessages.length > 0 && (\n        <div className=\"space-y-0\">\n          {conversationMessages.map((message, index) => (\n            <Message\n              key={message.id}\n              message={message}\n              isLast={index === conversationMessages.length - 1}\n              onCitationClick={handleCitationClick}\n              onFeedback={(feedback) => handleMessageFeedback(message.id, feedback)}\n            />\n          ))}\n        </div>\n      )}\n      \n      {/* Streaming Message */}\n      {streamingMessage && (\n        <Message\n          message={streamingMessage}\n          isStreaming={true}\n          isLast={true}\n          onCitationClick={handleCitationClick}\n        />\n      )}\n      \n      {/* Typing Indicator */}\n      {isStreaming && !streamingMessage && (\n        <TypingIndicator />\n      )}\n    </div>\n  );\n};\n\ninterface ChatHeaderProps {\n  mode?: 'standalone' | 'widget' | 'floating';\n  onClose?: () => void;\n  onAgentSettings?: (agent: Agent) => void;\n}\n\nconst ChatHeader: React.FC<ChatHeaderProps> = ({ \n  mode = 'standalone', \n  onClose,\n  onAgentSettings \n}) => {\n  const { currentAgent } = useAgentStore();\n  \n  if (mode === 'widget' || mode === 'floating') {\n    return (\n      <header className=\"flex items-center justify-between px-4 py-3 border-b border-gray-200 bg-white\">\n        <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n          <div className=\"w-8 h-8 rounded-lg bg-brand-500 flex items-center justify-center flex-shrink-0\">\n            <Bot className=\"w-5 h-5 text-white\" />\n          </div>\n          <div className=\"min-w-0 flex-1\">\n            <h2 className=\"font-semibold text-gray-900 truncate\">\n              {currentAgent?.project_name || 'CustomGPT Assistant'}\n            </h2>\n            <p className=\"text-xs text-gray-500\">\n              {currentAgent?.is_chat_active ? 'Online' : 'Offline'}\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          {/* Agent Selector - Compact for widget/floating mode */}\n          <div className=\"w-40\">\n            <AgentSelector\n              onSettingsClick={onAgentSettings}\n              className=\"w-full\"\n              showSettings={false}\n            />\n          </div>\n          \n          {onClose && (\n            <button\n              onClick={onClose}\n              className=\"p-1.5 rounded-lg hover:bg-gray-100 transition-colors flex-shrink-0\"\n            >\n              <span className=\"sr-only\">Close</span>\n              ×\n            </button>\n          )}\n        </div>\n      </header>\n    );\n  }\n  \n  // For standalone mode, show full header with agent selector\n  if (mode === 'standalone') {\n    return (\n      <header className=\"flex items-center justify-between px-4 py-3 border-b border-gray-200 bg-white\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"w-8 h-8 rounded-lg bg-brand-500 flex items-center justify-center\">\n            <Bot className=\"w-5 h-5 text-white\" />\n          </div>\n          <h1 className=\"text-lg font-semibold text-gray-900\">\n            CustomGPT Chat\n          </h1>\n        </div>\n        \n        <div className=\"flex-1 max-w-xs ml-4\">\n          <AgentSelector\n            onSettingsClick={onAgentSettings}\n            className=\"w-full\"\n          />\n        </div>\n      </header>\n    );\n  }\n  \n  return null;\n};\n\ninterface ChatContainerProps {\n  mode?: 'standalone' | 'widget' | 'floating';\n  className?: string;\n  onClose?: () => void;\n  onAgentSettings?: (agent: Agent) => void;\n}\n\nexport const ChatContainer: React.FC<ChatContainerProps> = ({ \n  mode = 'standalone',\n  className,\n  onClose,\n  onAgentSettings\n}) => {\n  const { sendMessage, isStreaming, cancelStreaming } = useMessageStore();\n  \n  const handleSendMessage = async (content: string, files?: File[]) => {\n    try {\n      await sendMessage(content, files);\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n  \n  const handleStopGeneration = () => {\n    cancelStreaming();\n  };\n  \n  const handleAgentSettings = (agent: Agent) => {\n    onAgentSettings?.(agent);\n    console.log('Agent settings requested for:', agent.project_name);\n  };\n  \n  return (\n    <div\n      className={cn(\n        'flex flex-col bg-white',\n        mode === 'standalone' && 'h-full',\n        mode === 'widget' && 'h-[600px] w-[400px] rounded-lg shadow-xl border border-gray-200',\n        mode === 'floating' && 'h-[600px] w-[400px] rounded-lg shadow-2xl border border-gray-200',\n        className\n      )}\n    >\n      <ChatHeader \n        mode={mode} \n        onClose={onClose}\n        onAgentSettings={handleAgentSettings}\n      />\n      <MessageArea className=\"flex-1\" />\n      <ChatInput\n        onSend={handleSendMessage}\n        disabled={isStreaming}\n        placeholder={isStreaming ? \"AI is thinking...\" : \"Send a message...\"}\n      />\n    </div>\n  );\n};","'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  MessageSquare, \n  Plus, \n  MoreHorizontal, \n  Trash2, \n  Edit3, \n  Calendar,\n  Search,\n  X\n} from 'lucide-react';\nimport { toast } from 'sonner';\n\nimport type { Conversation } from '@/types';\nimport { useConversationStore, useAgentStore, useMessageStore } from '@/store';\nimport { cn, formatTimestamp, generateConversationName } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\n\ninterface ConversationItemProps {\n  conversation: Conversation;\n  isSelected: boolean;\n  onSelect: (conversation: Conversation) => void;\n  onDelete: (conversationId: string) => void;\n  onRename: (conversationId: string, newName: string) => void;\n}\n\nconst ConversationItem: React.FC<ConversationItemProps> = ({\n  conversation,\n  isSelected,\n  onSelect,\n  onDelete,\n  onRename\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editName, setEditName] = useState(conversation.name);\n  const [showMenu, setShowMenu] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        setShowMenu(false);\n      }\n    };\n\n    if (showMenu) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }\n  }, [showMenu]);\n\n  // Focus input when editing starts\n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [isEditing]);\n\n  const handleEdit = () => {\n    setIsEditing(true);\n    setShowMenu(false);\n  };\n\n  const handleSaveEdit = () => {\n    if (editName.trim() && editName.trim() !== conversation.name) {\n      onRename(conversation.id, editName.trim());\n    }\n    setIsEditing(false);\n    setEditName(conversation.name);\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditing(false);\n    setEditName(conversation.name);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleSaveEdit();\n    } else if (e.key === 'Escape') {\n      handleCancelEdit();\n    }\n  };\n\n  const handleDelete = () => {\n    onDelete(conversation.id);\n    setShowMenu(false);\n  };\n\n  return (\n    <div\n      className={cn(\n        'group relative p-3 rounded-lg cursor-pointer transition-colors',\n        'hover:bg-gray-50',\n        isSelected && 'bg-brand-50 hover:bg-brand-100'\n      )}\n      onClick={() => !isEditing && onSelect(conversation)}\n    >\n      <div className=\"flex items-start justify-between gap-2\">\n        <div className=\"flex-1 min-w-0\">\n          {isEditing ? (\n            <input\n              ref={inputRef}\n              type=\"text\"\n              value={editName}\n              onChange={(e) => setEditName(e.target.value)}\n              onBlur={handleSaveEdit}\n              onKeyDown={handleKeyDown}\n              className=\"w-full px-2 py-1 text-sm font-medium text-gray-900 bg-white border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n              maxLength={100}\n            />\n          ) : (\n            <h3 className=\"font-medium text-gray-900 text-sm truncate\">\n              {conversation.name}\n            </h3>\n          )}\n          \n          <div className=\"flex items-center gap-2 mt-1 text-xs text-gray-500\">\n            <Calendar className=\"w-3 h-3\" />\n            <span>{formatTimestamp(conversation.updated_at)}</span>\n            {conversation.message_count && (\n              <>\n                <span>•</span>\n                <span>{conversation.message_count} messages</span>\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* Menu Button */}\n        {!isEditing && (\n          <div className=\"relative\" ref={menuRef}>\n            <Button\n              size=\"icon\"\n              variant=\"ghost\"\n              onClick={(e) => {\n                e.stopPropagation();\n                setShowMenu(!showMenu);\n              }}\n              className=\"opacity-0 group-hover:opacity-100 transition-opacity h-6 w-6 text-gray-400 hover:text-gray-600\"\n            >\n              <MoreHorizontal className=\"h-3 w-3\" />\n            </Button>\n\n            {/* Dropdown Menu */}\n            <AnimatePresence>\n              {showMenu && (\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.95, y: -5 }}\n                  animate={{ opacity: 1, scale: 1, y: 0 }}\n                  exit={{ opacity: 0, scale: 0.95, y: -5 }}\n                  transition={{ duration: 0.1 }}\n                  className=\"absolute right-0 top-6 mt-1 w-32 bg-white border border-gray-200 rounded-lg shadow-lg z-50\"\n                >\n                  <div className=\"py-1\">\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleEdit();\n                      }}\n                      className=\"flex items-center gap-2 w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n                    >\n                      <Edit3 className=\"w-3 h-3\" />\n                      Rename\n                    </button>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleDelete();\n                      }}\n                      className=\"flex items-center gap-2 w-full px-3 py-2 text-sm text-red-600 hover:bg-red-50\"\n                    >\n                      <Trash2 className=\"w-3 h-3\" />\n                      Delete\n                    </button>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\ninterface ConversationSidebarProps {\n  className?: string;\n  isCollapsed?: boolean;\n  onToggle?: () => void;\n}\n\nexport const ConversationSidebar: React.FC<ConversationSidebarProps> = ({\n  className,\n  isCollapsed = false,\n  onToggle\n}) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  \n  const { \n    conversations, \n    currentConversation, \n    loading, \n    error,\n    fetchConversations,\n    createConversation,\n    selectConversation,\n    deleteConversation\n  } = useConversationStore();\n  \n  const { currentAgent } = useAgentStore();\n  const { clearMessages } = useMessageStore();\n\n  // Fetch conversations when agent changes\n  useEffect(() => {\n    if (currentAgent) {\n      fetchConversations(currentAgent.id);\n    }\n  }, [currentAgent, fetchConversations]);\n\n  // Filter conversations based on search query\n  const filteredConversations = conversations.filter(conversation =>\n    conversation.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const handleNewConversation = async () => {\n    if (!currentAgent || isCreating) return;\n    \n    setIsCreating(true);\n    try {\n      const name = `New Chat ${new Date().toLocaleDateString()}`;\n      await createConversation(currentAgent.id, name);\n      clearMessages(); // Clear current messages when starting new conversation\n      toast.success('New conversation created');\n    } catch (error) {\n      console.error('Failed to create conversation:', error);\n      toast.error('Failed to create new conversation');\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  const handleSelectConversation = (conversation: Conversation) => {\n    selectConversation(conversation);\n    // Clear messages to load fresh when conversation changes\n    clearMessages();\n  };\n\n  const handleDeleteConversation = async (conversationId: string) => {\n    try {\n      await deleteConversation(conversationId);\n      toast.success('Conversation deleted');\n    } catch (error) {\n      console.error('Failed to delete conversation:', error);\n      toast.error('Failed to delete conversation');\n    }\n  };\n\n  const handleRenameConversation = (conversationId: string, newName: string) => {\n    // Update conversation name locally (in a real app, this would be an API call)\n    console.log('Rename conversation:', conversationId, newName);\n    toast.success('Conversation renamed');\n  };\n\n  if (isCollapsed) {\n    return (\n      <div className={cn('w-12 bg-gray-50 border-r border-gray-200 flex flex-col', className)}>\n        <div className=\"p-2\">\n          <Button\n            size=\"icon\"\n            variant=\"ghost\"\n            onClick={onToggle}\n            className=\"w-8 h-8\"\n            title=\"Expand sidebar\"\n          >\n            <MessageSquare className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn('w-80 bg-gray-50 border-r border-gray-200 flex flex-col', className)}>\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200 bg-white\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h2 className=\"font-semibold text-gray-900\">Conversations</h2>\n          <Button\n            size=\"icon\"\n            variant=\"ghost\"\n            onClick={onToggle}\n            className=\"h-8 w-8\"\n            title=\"Collapse sidebar\"\n          >\n            <X className=\"h-4 w-4\" />\n          </Button>\n        </div>\n        \n        {/* Search */}\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search conversations...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"w-full pl-9 pr-3 py-2 text-sm border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-brand-500 focus:border-transparent\"\n          />\n        </div>\n      </div>\n\n      {/* New Conversation Button */}\n      <div className=\"p-4\">\n        <Button\n          onClick={handleNewConversation}\n          disabled={!currentAgent || isCreating}\n          className=\"w-full justify-start gap-2\"\n          variant=\"outline\"\n        >\n          <Plus className=\"w-4 h-4\" />\n          {isCreating ? 'Creating...' : 'New Chat'}\n        </Button>\n      </div>\n\n      {/* Conversations List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {loading && conversations.length === 0 ? (\n          <div className=\"p-4 space-y-3\">\n            {[...Array(3)].map((_, i) => (\n              <div key={i} className=\"animate-pulse\">\n                <div className=\"h-4 bg-gray-200 rounded mb-2\" />\n                <div className=\"h-3 bg-gray-100 rounded w-3/4\" />\n              </div>\n            ))}\n          </div>\n        ) : error && conversations.length === 0 ? (\n          <div className=\"p-4 text-center\">\n            <p className=\"text-sm text-red-600 mb-2\">Failed to load conversations</p>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={() => currentAgent && fetchConversations(currentAgent.id)}\n            >\n              Try Again\n            </Button>\n          </div>\n        ) : filteredConversations.length === 0 ? (\n          <div className=\"p-4 text-center\">\n            <MessageSquare className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\n            <p className=\"text-sm text-gray-500\">\n              {searchQuery ? 'No conversations found' : 'No conversations yet'}\n            </p>\n            {!searchQuery && (\n              <p className=\"text-xs text-gray-400 mt-1\">\n                Start a new conversation to get going\n              </p>\n            )}\n          </div>\n        ) : (\n          <div className=\"p-2 space-y-1\">\n            {filteredConversations.map((conversation) => (\n              <ConversationItem\n                key={conversation.id}\n                conversation={conversation}\n                isSelected={currentConversation?.id === conversation.id}\n                onSelect={handleSelectConversation}\n                onDelete={handleDeleteConversation}\n                onRename={handleRenameConversation}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Footer */}\n      <div className=\"p-4 border-t border-gray-200 bg-white\">\n        <div className=\"text-xs text-gray-500 text-center\">\n          {filteredConversations.length} conversation{filteredConversations.length !== 1 ? 's' : ''}\n          {currentAgent && (\n            <span className=\"block mt-1\">\n              Agent: {currentAgent.project_name}\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};","'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport type { Agent } from '@/types';\nimport { useConversationStore, useMessageStore } from '@/store';\nimport { ChatContainer } from './ChatContainer';\nimport { ConversationSidebar } from './ConversationSidebar';\n\ninterface ChatLayoutProps {\n  mode?: 'standalone' | 'widget' | 'floating';\n  className?: string;\n  onClose?: () => void;\n  onAgentSettings?: (agent: Agent) => void;\n  showSidebar?: boolean;\n}\n\nexport const ChatLayout: React.FC<ChatLayoutProps> = ({\n  mode = 'standalone',\n  className,\n  onClose,\n  onAgentSettings,\n  showSidebar = true\n}) => {\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const { currentConversation } = useConversationStore();\n  const { loadMessages } = useMessageStore();\n\n  // Load messages when conversation changes\n  useEffect(() => {\n    if (currentConversation) {\n      loadMessages(currentConversation.id);\n    }\n  }, [currentConversation, loadMessages]);\n\n  // Hide sidebar for widget and floating modes\n  const shouldShowSidebar = showSidebar && mode === 'standalone';\n\n  const handleToggleSidebar = () => {\n    setSidebarCollapsed(!sidebarCollapsed);\n  };\n\n  if (!shouldShowSidebar) {\n    // For widget/floating modes, just show the chat container\n    return (\n      <ChatContainer\n        mode={mode}\n        className={className}\n        onClose={onClose}\n        onAgentSettings={onAgentSettings}\n      />\n    );\n  }\n\n  return (\n    <div className=\"flex h-full bg-white\">\n      {/* Sidebar */}\n      <ConversationSidebar\n        isCollapsed={sidebarCollapsed}\n        onToggle={handleToggleSidebar}\n      />\n      \n      {/* Main Chat Area */}\n      <div className=\"flex-1 flex flex-col min-w-0\">\n        <ChatContainer\n          mode={mode}\n          className=\"h-full\"\n          onClose={onClose}\n          onAgentSettings={onAgentSettings}\n        />\n      </div>\n    </div>\n  );\n};","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Toaster } from 'sonner';\n\nimport '../../app/globals.css';\nimport { WidgetConfig } from '../types';\nimport { useConfigStore } from '../store';\nimport { ChatLayout } from '../components/chat/ChatLayout';\n\n// Widget configuration interface\nexport interface CustomGPTWidgetConfig extends Partial<WidgetConfig> {\n  apiKey: string;\n  containerId?: string;\n  mode?: 'embedded' | 'floating' | 'widget';\n  theme?: 'light' | 'dark';\n  position?: 'bottom-right' | 'bottom-left' | 'top-right' | 'top-left';\n  width?: string;\n  height?: string;\n  enableCitations?: boolean;\n  enableFeedback?: boolean;\n  onOpen?: () => void;\n  onClose?: () => void;\n  onMessage?: (message: any) => void;\n}\n\n// Widget class for managing instances\nclass CustomGPTWidget {\n  private container: HTMLElement | null = null;\n  private root: any = null;\n  private config: CustomGPTWidgetConfig;\n  private isOpen: boolean = false;\n\n  constructor(config: CustomGPTWidgetConfig) {\n    this.config = {\n      mode: 'embedded',\n      theme: 'light',\n      position: 'bottom-right',\n      width: '400px',\n      height: '600px',\n      enableCitations: true,\n      enableFeedback: true,\n      ...config,\n    };\n\n    this.init();\n  }\n\n  private init() {\n    // Set up the API key in the config store\n    useConfigStore.getState().setApiKey(this.config.apiKey);\n\n    // Create container based on mode\n    this.createContainer();\n    \n    // Render the widget\n    this.render();\n  }\n\n  private createContainer() {\n    const { mode, containerId } = this.config;\n\n    if (mode === 'embedded' && containerId) {\n      // Use provided container\n      this.container = document.getElementById(containerId);\n      if (!this.container) {\n        throw new Error(`Container with id \"${containerId}\" not found`);\n      }\n    } else if (mode === 'floating') {\n      // Create floating container\n      this.container = document.createElement('div');\n      this.container.id = 'customgpt-floating-widget';\n      this.setupFloatingStyles();\n      document.body.appendChild(this.container);\n    } else {\n      // Create default container\n      this.container = document.createElement('div');\n      this.container.id = 'customgpt-widget';\n      document.body.appendChild(this.container);\n    }\n  }\n\n  private setupFloatingStyles() {\n    if (!this.container || this.config.mode !== 'floating') return;\n\n    const { position, width, height } = this.config;\n    \n    // Base floating styles\n    Object.assign(this.container.style, {\n      position: 'fixed',\n      zIndex: '9999',\n      width: width || '400px',\n      height: height || '600px',\n      boxShadow: '0 10px 25px rgba(0, 0, 0, 0.2)',\n      borderRadius: '12px',\n      overflow: 'hidden',\n      transition: 'all 0.3s ease',\n    });\n\n    // Position-specific styles\n    switch (position) {\n      case 'bottom-right':\n        Object.assign(this.container.style, {\n          bottom: '20px',\n          right: '20px',\n        });\n        break;\n      case 'bottom-left':\n        Object.assign(this.container.style, {\n          bottom: '20px',\n          left: '20px',\n        });\n        break;\n      case 'top-right':\n        Object.assign(this.container.style, {\n          top: '20px',\n          right: '20px',\n        });\n        break;\n      case 'top-left':\n        Object.assign(this.container.style, {\n          top: '20px',\n          left: '20px',\n        });\n        break;\n    }\n\n    // Initially hidden for floating mode\n    this.container.style.display = 'none';\n  }\n\n  private render() {\n    if (!this.container) return;\n\n    this.root = createRoot(this.container);\n    \n    const WidgetApp = () => {\n      const handleClose = () => {\n        this.close();\n        this.config.onClose?.();\n      };\n\n      return (\n        <>\n          <ChatLayout\n            mode={this.config.mode === 'embedded' ? 'widget' : 'floating'}\n            onClose={this.config.mode === 'floating' ? handleClose : undefined}\n            showSidebar={false} // Disable sidebar for widget mode\n          />\n          <Toaster \n            position=\"top-center\" \n            toastOptions={{\n              style: { zIndex: 10000 }\n            }}\n          />\n        </>\n      );\n    };\n\n    this.root.render(<WidgetApp />);\n\n    // Auto-open for embedded mode\n    if (this.config.mode === 'embedded') {\n      this.open();\n    }\n  }\n\n  // Public methods\n  public open() {\n    if (!this.container) return;\n\n    this.isOpen = true;\n    \n    if (this.config.mode === 'floating') {\n      this.container.style.display = 'block';\n      // Trigger animation\n      setTimeout(() => {\n        if (this.container) {\n          this.container.style.transform = 'translateY(0)';\n          this.container.style.opacity = '1';\n        }\n      }, 10);\n    }\n\n    this.config.onOpen?.();\n  }\n\n  public close() {\n    if (!this.container) return;\n\n    this.isOpen = false;\n\n    if (this.config.mode === 'floating') {\n      this.container.style.transform = 'translateY(20px)';\n      this.container.style.opacity = '0';\n      \n      setTimeout(() => {\n        if (this.container) {\n          this.container.style.display = 'none';\n        }\n      }, 300);\n    }\n  }\n\n  public toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  public destroy() {\n    if (this.root) {\n      this.root.unmount();\n    }\n    \n    if (this.container && this.container.parentNode) {\n      this.container.parentNode.removeChild(this.container);\n    }\n    \n    this.container = null;\n    this.root = null;\n  }\n\n  public updateConfig(newConfig: Partial<CustomGPTWidgetConfig>) {\n    this.config = { ...this.config, ...newConfig };\n    \n    // Re-render with new config\n    this.render();\n  }\n\n  // Getters\n  public get isOpened() {\n    return this.isOpen;\n  }\n\n  public get configuration() {\n    return { ...this.config };\n  }\n}\n\n// Global API for the widget\ndeclare global {\n  interface Window {\n    CustomGPTWidget: {\n      init: (config: CustomGPTWidgetConfig) => CustomGPTWidget;\n      create: (config: CustomGPTWidgetConfig) => CustomGPTWidget;\n    };\n  }\n}\n\n// Export for UMD build\nconst CustomGPTWidgetAPI = {\n  init: (config: CustomGPTWidgetConfig): CustomGPTWidget => {\n    return new CustomGPTWidget(config);\n  },\n  \n  create: (config: CustomGPTWidgetConfig): CustomGPTWidget => {\n    return new CustomGPTWidget(config);\n  },\n};\n\n// Global assignment for browser usage\nif (typeof window !== 'undefined') {\n  window.CustomGPTWidget = CustomGPTWidgetAPI;\n}\n\n// For module usage\nexport { CustomGPTWidget, CustomGPTWidgetAPI };\nexport default CustomGPTWidgetAPI;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t30: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = this[\"webpackChunkCustomGPTWidget\"] = this[\"webpackChunkCustomGPTWidget\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(9909)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["root","factory","exports","module","define","amd","this","deferred","cn","inputs","twMerge","clsx","generateId","Math","random","toString","substring","Date","now","formatFileSize","bytes","i","floor","log","parseFloat","pow","toFixed","formatTimestamp","timestamp","date","diffInMs","getTime","diffInMinutes","diffInHours","diffInDays","toLocaleDateString","async","copyToClipboard","text","navigator","clipboard","writeText","error","parseStreamChunk","chunk","startsWith","data","slice","type","JSON","parse","delay","ms","Promise","resolve","setTimeout","CONSTANTS","MAX_FILE_SIZE","ACCEPTED_FILE_TYPES","MAX_MESSAGE_LENGTH","API_TIMEOUT","STREAM_TIMEOUT","RETRY_ATTEMPTS","RETRY_DELAY","CustomGPTAPIClient","constructor","config","_defineProperty","Map","apiKey","baseURL","timeout","retryAttempts","retryDelay","request","endpoint","options","params","fetchOptions","url","URL","Object","entries","forEach","key","value","searchParams","append","headers","body","FormData","requestOptions","fn","maxAttempts","baseDelay","lastError","attempt","delayTime","retryWithBackoff","abortController","AbortController","requestId","generateRequestId","abortControllers","set","timeoutId","abort","response","fetch","signal","clearTimeout","delete","ok","errorText","errorMessage","errorData","message","status","APIError","json","Error","name","streamRequest","streamOptions","onChunk","onComplete","onError","reader","getReader","decoder","TextDecoder","buffer","done","read","decode","stream","lines","split","pop","line","trim","releaseLock","cancelRequest","controller","get","cancelAllRequests","clear","getAgents","getAgent","id","createAgent","formData","undefined","File","method","updateAgent","stringify","deleteAgent","getAgentSettings","updateAgentSettings","settings","getConversations","projectId","createConversation","updateConversation","sessionId","deleteConversation","getMessages","sendMessage","sendMessageStream","updateMessageFeedback","promptId","getCitation","citationId","getSources","uploadFile","file","code","details","super","defaultClient","getClient","initializeClient","useConfigStore","create","persist","theme","setApiKey","setBaseURL","setTheme","window","document","documentElement","className","partialize","state","onRehydrateStorage","useAgentStore","agents","currentAgent","loading","fetchAgents","client","Array","isArray","length","selectAgent","agent","setAgents","current","find","a","useConversationStore","conversations","currentConversation","fetchConversations","newConversation","selectConversation","conversation","c","conversationId","project_id","updatedConversations","filter","ensureConversation","firstMessage","projectConversations","title","join","generateConversationName","StreamHandler","processStream","callbacks","currentMessage","content","citations","isComplete","cancel","processLine","push","citation","onCitation","getCurrentMessage","isStreaming","globalStreamManager","maxConcurrentStreams","startStream","streamId","streams","size","has","cancelStream","handler","cancelAllStreams","getActiveStreams","from","keys","getStreamStatus","exists","getActiveStreamCount","useMessageStore","messages","streamingMessage","files","agentStore","getState","conversationStore","userMessage","role","toISOString","addMessage","assistantMessage","all","map","prompt","updateStreamingMessage","finalMessage","newMessages","conversationMessages","existingIndex","findIndex","m","clearMessages","messageId","feedback","updatedMessage","getMessagesForConversation","cancelStreaming","loadMessages","formattedMessages","msg","sidebarOpen","settingsOpen","fontSize","setSidebarOpen","open","setSettingsOpen","setFontSize","classList","remove","add","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","sm","lg","icon","defaultVariants","Button","React","asChild","props","ref","_jsx","displayName","CitationCard","index","isExpanded","onToggle","onClick","_jsxs","children","source","ChevronDown","AnimatePresence","motion","div","initial","height","opacity","animate","exit","transition","duration","confidence","round","style","width","href","target","rel","ExternalLink","CitationList","onCitationClick","maxVisible","expanded","setExpanded","useState","Set","showAll","setShowAll","visibleCitations","hasMore","BookOpen","idx","y","newExpanded","toggleExpanded","CodeBlock","language","copied","setCopied","toast","success","SyntaxHighlighter","oneDark","customStyle","margin","borderRadius","StreamingCursor","MessageContent","ReactMarkdown","remarkPlugins","remarkGfm","components","match","exec","String","replace","MessageActions","onFeedback","setFeedback","handleFeedback","Copy","ThumbsUp","ThumbsDown","handleRegenerate","info","RotateCw","Message","isLast","isUser","User","Bot","FileChip","onRemove","fileIcon","fileType","toLowerCase","includes","getFileIcon","scale","_Fragment","progress","AlertCircle","disabled","X","FileUploadButton","onUpload","fileInputRef","useRef","multiple","accept","onChange","e","handleClick","click","Paperclip","ChatInput","onSend","placeholder","maxLength","input","setInput","setFiles","isDragOver","setIsDragOver","textareaRef","adjustTextareaHeight","useCallback","textarea","scrollHeight","maxHeight","min","handleSubmit","preventDefault","fileObjects","f","focus","handleFileUpload","newFiles","uploadFiles","some","prev","simulateUpload","interval","setInterval","clearInterval","getRootProps","getInputProps","isDragActive","useDropzone","onDrop","noClick","noKeyboard","reduce","acc","maxSize","onDragEnter","onDragLeave","canSend","Upload","removeFile","fileId","onSubmit","onKeyDown","shiftKey","rows","overflowY","Square","Send","TypingIndicator","AgentItem","isSelected","onSelect","onSettingsClick","project_name","Check","agent_capability","chatbot_model","is_chat_active","stopPropagation","Settings","AgentSelector","showSettings","isOpen","setIsOpen","dropdownRef","useEffect","handleClickOutside","event","contains","addEventListener","removeEventListener","handleRefresh","handleSelectAgent","RefreshCw","EXAMPLE_PROMPTS","ExamplePromptCard","WelcomeMessage","onPromptClick","Sparkles","MessageArea","scrollRef","scrollTo","top","behavior","handleCitationClick","ChatHeader","mode","onClose","onAgentSettings","ChatContainer","ConversationItem","onDelete","onRename","isEditing","setIsEditing","editName","setEditName","showMenu","setShowMenu","inputRef","menuRef","select","handleSaveEdit","onBlur","Calendar","updated_at","message_count","MoreHorizontal","Edit3","Trash2","ConversationSidebar","isCollapsed","searchQuery","setSearchQuery","isCreating","setIsCreating","filteredConversations","handleSelectConversation","handleDeleteConversation","handleRenameConversation","newName","MessageSquare","Search","Plus","_","ChatLayout","showSidebar","sidebarCollapsed","setSidebarCollapsed","handleToggleSidebar","CustomGPTWidget","position","enableCitations","enableFeedback","init","createContainer","render","containerId","container","getElementById","createElement","setupFloatingStyles","appendChild","assign","zIndex","boxShadow","overflow","bottom","right","left","display","createRoot","WidgetApp","handleClose","close","Toaster","toastOptions","transform","onOpen","toggle","destroy","unmount","parentNode","removeChild","updateConfig","newConfig","isOpened","configuration","CustomGPTWidgetAPI","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}